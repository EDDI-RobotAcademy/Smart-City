// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_v_tpg_0_1_v_tpgHlsDataFlow (
        s_axis_video_TDATA,
        s_axis_video_TKEEP,
        s_axis_video_TSTRB,
        s_axis_video_TUSER,
        s_axis_video_TLAST,
        s_axis_video_TID,
        s_axis_video_TDEST,
        height,
        width,
        field_id,
        fid_in,
        passthruStartX,
        passthruStartY,
        passthruEndX,
        passthruEndY,
        enableInput,
        bckgndId,
        motionSpeed,
        colorFormat,
        ZplateHorContStart,
        ZplateHorContDelta,
        ZplateVerContStart,
        ZplateVerContDelta,
        dpDynamicRange,
        dpYUVCoef,
        m_axis_video_TDATA,
        m_axis_video_TKEEP,
        m_axis_video_TSTRB,
        m_axis_video_TUSER,
        m_axis_video_TLAST,
        m_axis_video_TID,
        m_axis_video_TDEST,
        fid,
        s,
        ap_clk,
        ap_rst,
        passthruStartX_ap_vld,
        passthruStartY_ap_vld,
        passthruEndX_ap_vld,
        passthruEndY_ap_vld,
        bckgndId_ap_vld,
        motionSpeed_ap_vld,
        ZplateHorContStart_ap_vld,
        ZplateHorContDelta_ap_vld,
        ZplateVerContStart_ap_vld,
        ZplateVerContDelta_ap_vld,
        dpDynamicRange_ap_vld,
        dpYUVCoef_ap_vld,
        ap_start,
        s_axis_video_TVALID,
        s_axis_video_TREADY,
        enableInput_ap_vld,
        height_ap_vld,
        width_ap_vld,
        colorFormat_ap_vld,
        s_ap_vld,
        m_axis_video_TVALID,
        m_axis_video_TREADY,
        fid_in_ap_vld,
        fid_ap_vld,
        field_id_ap_vld,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] s_axis_video_TDATA;
input  [3:0] s_axis_video_TKEEP;
input  [3:0] s_axis_video_TSTRB;
input  [0:0] s_axis_video_TUSER;
input  [0:0] s_axis_video_TLAST;
input  [0:0] s_axis_video_TID;
input  [0:0] s_axis_video_TDEST;
input  [15:0] height;
input  [15:0] width;
input  [15:0] field_id;
input  [0:0] fid_in;
input  [15:0] passthruStartX;
input  [15:0] passthruStartY;
input  [15:0] passthruEndX;
input  [15:0] passthruEndY;
input  [7:0] enableInput;
input  [7:0] bckgndId;
input  [7:0] motionSpeed;
input  [7:0] colorFormat;
input  [15:0] ZplateHorContStart;
input  [15:0] ZplateHorContDelta;
input  [15:0] ZplateVerContStart;
input  [15:0] ZplateVerContDelta;
input  [7:0] dpDynamicRange;
input  [7:0] dpYUVCoef;
output  [31:0] m_axis_video_TDATA;
output  [3:0] m_axis_video_TKEEP;
output  [3:0] m_axis_video_TSTRB;
output  [0:0] m_axis_video_TUSER;
output  [0:0] m_axis_video_TLAST;
output  [0:0] m_axis_video_TID;
output  [0:0] m_axis_video_TDEST;
output  [0:0] fid;
input  [31:0] s;
input   ap_clk;
input   ap_rst;
input   passthruStartX_ap_vld;
input   passthruStartY_ap_vld;
input   passthruEndX_ap_vld;
input   passthruEndY_ap_vld;
input   bckgndId_ap_vld;
input   motionSpeed_ap_vld;
input   ZplateHorContStart_ap_vld;
input   ZplateHorContDelta_ap_vld;
input   ZplateVerContStart_ap_vld;
input   ZplateVerContDelta_ap_vld;
input   dpDynamicRange_ap_vld;
input   dpYUVCoef_ap_vld;
input   ap_start;
input   s_axis_video_TVALID;
output   s_axis_video_TREADY;
input   enableInput_ap_vld;
input   height_ap_vld;
input   width_ap_vld;
input   colorFormat_ap_vld;
input   s_ap_vld;
output   m_axis_video_TVALID;
input   m_axis_video_TREADY;
input   fid_in_ap_vld;
output   fid_ap_vld;
input   field_id_ap_vld;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire   [15:0] entry_proc_U0_ap_return_0;
wire   [15:0] entry_proc_U0_ap_return_1;
wire   [15:0] entry_proc_U0_ap_return_2;
wire   [15:0] entry_proc_U0_ap_return_3;
wire   [7:0] entry_proc_U0_ap_return_4;
wire   [7:0] entry_proc_U0_ap_return_5;
wire   [15:0] entry_proc_U0_ap_return_6;
wire   [15:0] entry_proc_U0_ap_return_7;
wire   [15:0] entry_proc_U0_ap_return_8;
wire   [15:0] entry_proc_U0_ap_return_9;
wire   [7:0] entry_proc_U0_ap_return_10;
wire   [7:0] entry_proc_U0_ap_return_11;
wire    ap_channel_done_dpYUVCoef_c_channel;
wire    dpYUVCoef_c_channel_full_n;
reg    ap_sync_reg_channel_write_dpYUVCoef_c_channel;
wire    ap_sync_channel_write_dpYUVCoef_c_channel;
wire    ap_channel_done_dpDynamicRange_c_channel;
wire    dpDynamicRange_c_channel_full_n;
reg    ap_sync_reg_channel_write_dpDynamicRange_c_channel;
wire    ap_sync_channel_write_dpDynamicRange_c_channel;
wire    ap_channel_done_ZplateVerContDelta_c_channel;
wire    ZplateVerContDelta_c_channel_full_n;
reg    ap_sync_reg_channel_write_ZplateVerContDelta_c_channel;
wire    ap_sync_channel_write_ZplateVerContDelta_c_channel;
wire    ap_channel_done_ZplateVerContStart_c_channel;
wire    ZplateVerContStart_c_channel_full_n;
reg    ap_sync_reg_channel_write_ZplateVerContStart_c_channel;
wire    ap_sync_channel_write_ZplateVerContStart_c_channel;
wire    ap_channel_done_ZplateHorContDelta_c_channel;
wire    ZplateHorContDelta_c_channel_full_n;
reg    ap_sync_reg_channel_write_ZplateHorContDelta_c_channel;
wire    ap_sync_channel_write_ZplateHorContDelta_c_channel;
wire    ap_channel_done_ZplateHorContStart_c_channel;
wire    ZplateHorContStart_c_channel_full_n;
reg    ap_sync_reg_channel_write_ZplateHorContStart_c_channel;
wire    ap_sync_channel_write_ZplateHorContStart_c_channel;
wire    ap_channel_done_motionSpeed_c_channel;
wire    motionSpeed_c_channel_full_n;
reg    ap_sync_reg_channel_write_motionSpeed_c_channel;
wire    ap_sync_channel_write_motionSpeed_c_channel;
wire    ap_channel_done_bckgndId_c_channel;
wire    bckgndId_c_channel_full_n;
reg    ap_sync_reg_channel_write_bckgndId_c_channel;
wire    ap_sync_channel_write_bckgndId_c_channel;
wire    ap_channel_done_passthruEndY_c_channel;
wire    passthruEndY_c_channel_full_n;
reg    ap_sync_reg_channel_write_passthruEndY_c_channel;
wire    ap_sync_channel_write_passthruEndY_c_channel;
wire    ap_channel_done_passthruEndX_c_channel;
wire    passthruEndX_c_channel_full_n;
reg    ap_sync_reg_channel_write_passthruEndX_c_channel;
wire    ap_sync_channel_write_passthruEndX_c_channel;
wire    ap_channel_done_passthruStartY_c_channel;
wire    passthruStartY_c_channel_full_n;
reg    ap_sync_reg_channel_write_passthruStartY_c_channel;
wire    ap_sync_channel_write_passthruStartY_c_channel;
wire    ap_channel_done_passthruStartX_c_channel;
wire    passthruStartX_c_channel_full_n;
reg    ap_sync_reg_channel_write_passthruStartX_c_channel;
wire    ap_sync_channel_write_passthruStartX_c_channel;
wire    AXIvideo2MultiPixStream_U0_ap_start;
wire    AXIvideo2MultiPixStream_U0_ap_done;
wire    AXIvideo2MultiPixStream_U0_ap_continue;
wire    AXIvideo2MultiPixStream_U0_ap_idle;
wire    AXIvideo2MultiPixStream_U0_ap_ready;
wire    AXIvideo2MultiPixStream_U0_s_axis_video_TREADY;
wire   [47:0] AXIvideo2MultiPixStream_U0_srcYUV_din;
wire    AXIvideo2MultiPixStream_U0_srcYUV_write;
wire   [15:0] AXIvideo2MultiPixStream_U0_height_c_din;
wire    AXIvideo2MultiPixStream_U0_height_c_write;
wire   [15:0] AXIvideo2MultiPixStream_U0_width_c_din;
wire    AXIvideo2MultiPixStream_U0_width_c_write;
wire   [7:0] AXIvideo2MultiPixStream_U0_enableInput_c_din;
wire    AXIvideo2MultiPixStream_U0_enableInput_c_write;
wire   [7:0] AXIvideo2MultiPixStream_U0_colorFormat_c_din;
wire    AXIvideo2MultiPixStream_U0_colorFormat_c_write;
wire    tpgBackground_U0_ap_start;
wire    tpgBackground_U0_ap_done;
wire    tpgBackground_U0_ap_continue;
wire    tpgBackground_U0_ap_idle;
wire    tpgBackground_U0_ap_ready;
wire    tpgBackground_U0_srcYUV_read;
wire    tpgBackground_U0_height_read;
wire    tpgBackground_U0_width_read;
wire    tpgBackground_U0_enableInput_read;
wire    tpgBackground_U0_colorFormat_read;
wire   [47:0] tpgBackground_U0_ovrlayYUV_din;
wire    tpgBackground_U0_ovrlayYUV_write;
wire    MultiPixStream2AXIvideo_U0_ap_start;
wire    MultiPixStream2AXIvideo_U0_ap_done;
wire    MultiPixStream2AXIvideo_U0_ap_continue;
wire    MultiPixStream2AXIvideo_U0_ap_idle;
wire    MultiPixStream2AXIvideo_U0_ap_ready;
wire    MultiPixStream2AXIvideo_U0_ovrlayYUV_read;
wire   [31:0] MultiPixStream2AXIvideo_U0_m_axis_video_TDATA;
wire    MultiPixStream2AXIvideo_U0_m_axis_video_TVALID;
wire   [3:0] MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP;
wire   [3:0] MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TUSER;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TLAST;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TID;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TDEST;
wire   [0:0] MultiPixStream2AXIvideo_U0_fid;
wire    MultiPixStream2AXIvideo_U0_fid_ap_vld;
wire   [15:0] passthruStartX_c_channel_dout;
wire    passthruStartX_c_channel_empty_n;
wire   [15:0] passthruStartY_c_channel_dout;
wire    passthruStartY_c_channel_empty_n;
wire   [15:0] passthruEndX_c_channel_dout;
wire    passthruEndX_c_channel_empty_n;
wire   [15:0] passthruEndY_c_channel_dout;
wire    passthruEndY_c_channel_empty_n;
wire   [7:0] bckgndId_c_channel_dout;
wire    bckgndId_c_channel_empty_n;
wire   [7:0] motionSpeed_c_channel_dout;
wire    motionSpeed_c_channel_empty_n;
wire   [15:0] ZplateHorContStart_c_channel_dout;
wire    ZplateHorContStart_c_channel_empty_n;
wire   [15:0] ZplateHorContDelta_c_channel_dout;
wire    ZplateHorContDelta_c_channel_empty_n;
wire   [15:0] ZplateVerContStart_c_channel_dout;
wire    ZplateVerContStart_c_channel_empty_n;
wire   [15:0] ZplateVerContDelta_c_channel_dout;
wire    ZplateVerContDelta_c_channel_empty_n;
wire   [7:0] dpDynamicRange_c_channel_dout;
wire    dpDynamicRange_c_channel_empty_n;
wire   [7:0] dpYUVCoef_c_channel_dout;
wire    dpYUVCoef_c_channel_empty_n;
wire    srcYUV_full_n;
wire   [47:0] srcYUV_dout;
wire    srcYUV_empty_n;
wire    height_c_full_n;
wire   [15:0] height_c_dout;
wire    height_c_empty_n;
wire    width_c_full_n;
wire   [15:0] width_c_dout;
wire    width_c_empty_n;
wire    enableInput_c_full_n;
wire   [7:0] enableInput_c_dout;
wire    enableInput_c_empty_n;
wire    colorFormat_c_full_n;
wire   [7:0] colorFormat_c_dout;
wire    colorFormat_c_empty_n;
wire    ovrlayYUV_full_n;
wire   [47:0] ovrlayYUV_dout;
wire    ovrlayYUV_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc_U0_ap_ready;
wire    ap_sync_entry_proc_U0_ap_ready;
reg    ap_sync_reg_AXIvideo2MultiPixStream_U0_ap_ready;
wire    ap_sync_AXIvideo2MultiPixStream_U0_ap_ready;
reg    ap_sync_reg_tpgBackground_U0_ap_ready;
wire    ap_sync_tpgBackground_U0_ap_ready;
reg    ap_sync_reg_MultiPixStream2AXIvideo_U0_ap_ready;
wire    ap_sync_MultiPixStream2AXIvideo_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_dpYUVCoef_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_dpDynamicRange_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_ZplateVerContDelta_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_ZplateVerContStart_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_ZplateHorContDelta_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_ZplateHorContStart_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_motionSpeed_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_bckgndId_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_passthruEndY_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_passthruEndX_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_passthruStartY_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_passthruStartX_c_channel = 1'b0;
#0 ap_sync_reg_entry_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_AXIvideo2MultiPixStream_U0_ap_ready = 1'b0;
#0 ap_sync_reg_tpgBackground_U0_ap_ready = 1'b0;
#0 ap_sync_reg_MultiPixStream2AXIvideo_U0_ap_ready = 1'b0;
end

system_v_tpg_0_1_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(entry_proc_U0_ap_start),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .passthruStartX(passthruStartX),
    .passthruStartY(passthruStartY),
    .passthruEndX(passthruEndX),
    .passthruEndY(passthruEndY),
    .bckgndId(bckgndId),
    .motionSpeed(motionSpeed),
    .ZplateHorContStart(ZplateHorContStart),
    .ZplateHorContDelta(ZplateHorContDelta),
    .ZplateVerContStart(ZplateVerContStart),
    .ZplateVerContDelta(ZplateVerContDelta),
    .dpDynamicRange(dpDynamicRange),
    .dpYUVCoef(dpYUVCoef),
    .ap_return_0(entry_proc_U0_ap_return_0),
    .ap_return_1(entry_proc_U0_ap_return_1),
    .ap_return_2(entry_proc_U0_ap_return_2),
    .ap_return_3(entry_proc_U0_ap_return_3),
    .ap_return_4(entry_proc_U0_ap_return_4),
    .ap_return_5(entry_proc_U0_ap_return_5),
    .ap_return_6(entry_proc_U0_ap_return_6),
    .ap_return_7(entry_proc_U0_ap_return_7),
    .ap_return_8(entry_proc_U0_ap_return_8),
    .ap_return_9(entry_proc_U0_ap_return_9),
    .ap_return_10(entry_proc_U0_ap_return_10),
    .ap_return_11(entry_proc_U0_ap_return_11)
);

system_v_tpg_0_1_AXIvideo2MultiPixStream AXIvideo2MultiPixStream_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(AXIvideo2MultiPixStream_U0_ap_start),
    .ap_done(AXIvideo2MultiPixStream_U0_ap_done),
    .ap_continue(AXIvideo2MultiPixStream_U0_ap_continue),
    .ap_idle(AXIvideo2MultiPixStream_U0_ap_idle),
    .ap_ready(AXIvideo2MultiPixStream_U0_ap_ready),
    .s_axis_video_TDATA(s_axis_video_TDATA),
    .s_axis_video_TVALID(s_axis_video_TVALID),
    .s_axis_video_TREADY(AXIvideo2MultiPixStream_U0_s_axis_video_TREADY),
    .s_axis_video_TKEEP(s_axis_video_TKEEP),
    .s_axis_video_TSTRB(s_axis_video_TSTRB),
    .s_axis_video_TUSER(s_axis_video_TUSER),
    .s_axis_video_TLAST(s_axis_video_TLAST),
    .s_axis_video_TID(s_axis_video_TID),
    .s_axis_video_TDEST(s_axis_video_TDEST),
    .srcYUV_din(AXIvideo2MultiPixStream_U0_srcYUV_din),
    .srcYUV_full_n(srcYUV_full_n),
    .srcYUV_write(AXIvideo2MultiPixStream_U0_srcYUV_write),
    .enableInput(enableInput),
    .height(height),
    .width(width),
    .colorFormat(colorFormat),
    .height_c_din(AXIvideo2MultiPixStream_U0_height_c_din),
    .height_c_full_n(height_c_full_n),
    .height_c_write(AXIvideo2MultiPixStream_U0_height_c_write),
    .width_c_din(AXIvideo2MultiPixStream_U0_width_c_din),
    .width_c_full_n(width_c_full_n),
    .width_c_write(AXIvideo2MultiPixStream_U0_width_c_write),
    .enableInput_c_din(AXIvideo2MultiPixStream_U0_enableInput_c_din),
    .enableInput_c_full_n(enableInput_c_full_n),
    .enableInput_c_write(AXIvideo2MultiPixStream_U0_enableInput_c_write),
    .colorFormat_c_din(AXIvideo2MultiPixStream_U0_colorFormat_c_din),
    .colorFormat_c_full_n(colorFormat_c_full_n),
    .colorFormat_c_write(AXIvideo2MultiPixStream_U0_colorFormat_c_write)
);

system_v_tpg_0_1_tpgBackground tpgBackground_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(tpgBackground_U0_ap_start),
    .ap_done(tpgBackground_U0_ap_done),
    .ap_continue(tpgBackground_U0_ap_continue),
    .ap_idle(tpgBackground_U0_ap_idle),
    .ap_ready(tpgBackground_U0_ap_ready),
    .srcYUV_dout(srcYUV_dout),
    .srcYUV_empty_n(srcYUV_empty_n),
    .srcYUV_read(tpgBackground_U0_srcYUV_read),
    .height_dout(height_c_dout),
    .height_empty_n(height_c_empty_n),
    .height_read(tpgBackground_U0_height_read),
    .width_dout(width_c_dout),
    .width_empty_n(width_c_empty_n),
    .width_read(tpgBackground_U0_width_read),
    .p_read(passthruStartX_c_channel_dout),
    .p_read1(passthruStartY_c_channel_dout),
    .p_read2(passthruEndX_c_channel_dout),
    .p_read3(passthruEndY_c_channel_dout),
    .enableInput_dout(enableInput_c_dout),
    .enableInput_empty_n(enableInput_c_empty_n),
    .enableInput_read(tpgBackground_U0_enableInput_read),
    .p_read4(bckgndId_c_channel_dout),
    .p_read5(ZplateHorContStart_c_channel_dout),
    .p_read6(ZplateHorContDelta_c_channel_dout),
    .p_read7(ZplateVerContStart_c_channel_dout),
    .p_read8(ZplateVerContDelta_c_channel_dout),
    .p_read9(dpDynamicRange_c_channel_dout),
    .p_read10(dpYUVCoef_c_channel_dout),
    .p_read11(motionSpeed_c_channel_dout),
    .colorFormat_dout(colorFormat_c_dout),
    .colorFormat_empty_n(colorFormat_c_empty_n),
    .colorFormat_read(tpgBackground_U0_colorFormat_read),
    .ovrlayYUV_din(tpgBackground_U0_ovrlayYUV_din),
    .ovrlayYUV_full_n(ovrlayYUV_full_n),
    .ovrlayYUV_write(tpgBackground_U0_ovrlayYUV_write),
    .s(s)
);

system_v_tpg_0_1_MultiPixStream2AXIvideo MultiPixStream2AXIvideo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(MultiPixStream2AXIvideo_U0_ap_start),
    .ap_done(MultiPixStream2AXIvideo_U0_ap_done),
    .ap_continue(MultiPixStream2AXIvideo_U0_ap_continue),
    .ap_idle(MultiPixStream2AXIvideo_U0_ap_idle),
    .ap_ready(MultiPixStream2AXIvideo_U0_ap_ready),
    .ovrlayYUV_dout(ovrlayYUV_dout),
    .ovrlayYUV_empty_n(ovrlayYUV_empty_n),
    .ovrlayYUV_read(MultiPixStream2AXIvideo_U0_ovrlayYUV_read),
    .m_axis_video_TDATA(MultiPixStream2AXIvideo_U0_m_axis_video_TDATA),
    .m_axis_video_TVALID(MultiPixStream2AXIvideo_U0_m_axis_video_TVALID),
    .m_axis_video_TREADY(m_axis_video_TREADY),
    .m_axis_video_TKEEP(MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP),
    .m_axis_video_TSTRB(MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB),
    .m_axis_video_TUSER(MultiPixStream2AXIvideo_U0_m_axis_video_TUSER),
    .m_axis_video_TLAST(MultiPixStream2AXIvideo_U0_m_axis_video_TLAST),
    .m_axis_video_TID(MultiPixStream2AXIvideo_U0_m_axis_video_TID),
    .m_axis_video_TDEST(MultiPixStream2AXIvideo_U0_m_axis_video_TDEST),
    .height(height),
    .width(width),
    .colorFormat(colorFormat),
    .fid_in(fid_in),
    .fid(MultiPixStream2AXIvideo_U0_fid),
    .fid_ap_vld(MultiPixStream2AXIvideo_U0_fid_ap_vld),
    .field_id(field_id)
);

system_v_tpg_0_1_fifo_w16_d2_S passthruStartX_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_ap_return_0),
    .if_full_n(passthruStartX_c_channel_full_n),
    .if_write(ap_channel_done_passthruStartX_c_channel),
    .if_dout(passthruStartX_c_channel_dout),
    .if_empty_n(passthruStartX_c_channel_empty_n),
    .if_read(tpgBackground_U0_ap_ready)
);

system_v_tpg_0_1_fifo_w16_d2_S passthruStartY_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_ap_return_1),
    .if_full_n(passthruStartY_c_channel_full_n),
    .if_write(ap_channel_done_passthruStartY_c_channel),
    .if_dout(passthruStartY_c_channel_dout),
    .if_empty_n(passthruStartY_c_channel_empty_n),
    .if_read(tpgBackground_U0_ap_ready)
);

system_v_tpg_0_1_fifo_w16_d2_S passthruEndX_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_ap_return_2),
    .if_full_n(passthruEndX_c_channel_full_n),
    .if_write(ap_channel_done_passthruEndX_c_channel),
    .if_dout(passthruEndX_c_channel_dout),
    .if_empty_n(passthruEndX_c_channel_empty_n),
    .if_read(tpgBackground_U0_ap_ready)
);

system_v_tpg_0_1_fifo_w16_d2_S passthruEndY_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_ap_return_3),
    .if_full_n(passthruEndY_c_channel_full_n),
    .if_write(ap_channel_done_passthruEndY_c_channel),
    .if_dout(passthruEndY_c_channel_dout),
    .if_empty_n(passthruEndY_c_channel_empty_n),
    .if_read(tpgBackground_U0_ap_ready)
);

system_v_tpg_0_1_fifo_w8_d2_S bckgndId_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_ap_return_4),
    .if_full_n(bckgndId_c_channel_full_n),
    .if_write(ap_channel_done_bckgndId_c_channel),
    .if_dout(bckgndId_c_channel_dout),
    .if_empty_n(bckgndId_c_channel_empty_n),
    .if_read(tpgBackground_U0_ap_ready)
);

system_v_tpg_0_1_fifo_w8_d2_S motionSpeed_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_ap_return_5),
    .if_full_n(motionSpeed_c_channel_full_n),
    .if_write(ap_channel_done_motionSpeed_c_channel),
    .if_dout(motionSpeed_c_channel_dout),
    .if_empty_n(motionSpeed_c_channel_empty_n),
    .if_read(tpgBackground_U0_ap_ready)
);

system_v_tpg_0_1_fifo_w16_d2_S ZplateHorContStart_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_ap_return_6),
    .if_full_n(ZplateHorContStart_c_channel_full_n),
    .if_write(ap_channel_done_ZplateHorContStart_c_channel),
    .if_dout(ZplateHorContStart_c_channel_dout),
    .if_empty_n(ZplateHorContStart_c_channel_empty_n),
    .if_read(tpgBackground_U0_ap_ready)
);

system_v_tpg_0_1_fifo_w16_d2_S ZplateHorContDelta_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_ap_return_7),
    .if_full_n(ZplateHorContDelta_c_channel_full_n),
    .if_write(ap_channel_done_ZplateHorContDelta_c_channel),
    .if_dout(ZplateHorContDelta_c_channel_dout),
    .if_empty_n(ZplateHorContDelta_c_channel_empty_n),
    .if_read(tpgBackground_U0_ap_ready)
);

system_v_tpg_0_1_fifo_w16_d2_S ZplateVerContStart_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_ap_return_8),
    .if_full_n(ZplateVerContStart_c_channel_full_n),
    .if_write(ap_channel_done_ZplateVerContStart_c_channel),
    .if_dout(ZplateVerContStart_c_channel_dout),
    .if_empty_n(ZplateVerContStart_c_channel_empty_n),
    .if_read(tpgBackground_U0_ap_ready)
);

system_v_tpg_0_1_fifo_w16_d2_S ZplateVerContDelta_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_ap_return_9),
    .if_full_n(ZplateVerContDelta_c_channel_full_n),
    .if_write(ap_channel_done_ZplateVerContDelta_c_channel),
    .if_dout(ZplateVerContDelta_c_channel_dout),
    .if_empty_n(ZplateVerContDelta_c_channel_empty_n),
    .if_read(tpgBackground_U0_ap_ready)
);

system_v_tpg_0_1_fifo_w8_d2_S dpDynamicRange_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_ap_return_10),
    .if_full_n(dpDynamicRange_c_channel_full_n),
    .if_write(ap_channel_done_dpDynamicRange_c_channel),
    .if_dout(dpDynamicRange_c_channel_dout),
    .if_empty_n(dpDynamicRange_c_channel_empty_n),
    .if_read(tpgBackground_U0_ap_ready)
);

system_v_tpg_0_1_fifo_w8_d2_S dpYUVCoef_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_ap_return_11),
    .if_full_n(dpYUVCoef_c_channel_full_n),
    .if_write(ap_channel_done_dpYUVCoef_c_channel),
    .if_dout(dpYUVCoef_c_channel_dout),
    .if_empty_n(dpYUVCoef_c_channel_empty_n),
    .if_read(tpgBackground_U0_ap_ready)
);

system_v_tpg_0_1_fifo_w48_d16_S srcYUV_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2MultiPixStream_U0_srcYUV_din),
    .if_full_n(srcYUV_full_n),
    .if_write(AXIvideo2MultiPixStream_U0_srcYUV_write),
    .if_dout(srcYUV_dout),
    .if_empty_n(srcYUV_empty_n),
    .if_read(tpgBackground_U0_srcYUV_read)
);

system_v_tpg_0_1_fifo_w16_d2_S height_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2MultiPixStream_U0_height_c_din),
    .if_full_n(height_c_full_n),
    .if_write(AXIvideo2MultiPixStream_U0_height_c_write),
    .if_dout(height_c_dout),
    .if_empty_n(height_c_empty_n),
    .if_read(tpgBackground_U0_height_read)
);

system_v_tpg_0_1_fifo_w16_d2_S width_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2MultiPixStream_U0_width_c_din),
    .if_full_n(width_c_full_n),
    .if_write(AXIvideo2MultiPixStream_U0_width_c_write),
    .if_dout(width_c_dout),
    .if_empty_n(width_c_empty_n),
    .if_read(tpgBackground_U0_width_read)
);

system_v_tpg_0_1_fifo_w8_d2_S enableInput_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2MultiPixStream_U0_enableInput_c_din),
    .if_full_n(enableInput_c_full_n),
    .if_write(AXIvideo2MultiPixStream_U0_enableInput_c_write),
    .if_dout(enableInput_c_dout),
    .if_empty_n(enableInput_c_empty_n),
    .if_read(tpgBackground_U0_enableInput_read)
);

system_v_tpg_0_1_fifo_w8_d2_S colorFormat_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2MultiPixStream_U0_colorFormat_c_din),
    .if_full_n(colorFormat_c_full_n),
    .if_write(AXIvideo2MultiPixStream_U0_colorFormat_c_write),
    .if_dout(colorFormat_c_dout),
    .if_empty_n(colorFormat_c_empty_n),
    .if_read(tpgBackground_U0_colorFormat_read)
);

system_v_tpg_0_1_fifo_w48_d16_S ovrlayYUV_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(tpgBackground_U0_ovrlayYUV_din),
    .if_full_n(ovrlayYUV_full_n),
    .if_write(tpgBackground_U0_ovrlayYUV_write),
    .if_dout(ovrlayYUV_dout),
    .if_empty_n(ovrlayYUV_empty_n),
    .if_read(MultiPixStream2AXIvideo_U0_ovrlayYUV_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_AXIvideo2MultiPixStream_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_AXIvideo2MultiPixStream_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AXIvideo2MultiPixStream_U0_ap_ready <= ap_sync_AXIvideo2MultiPixStream_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_MultiPixStream2AXIvideo_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_MultiPixStream2AXIvideo_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_MultiPixStream2AXIvideo_U0_ap_ready <= ap_sync_MultiPixStream2AXIvideo_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ZplateHorContDelta_c_channel <= 1'b0;
    end else begin
        if (((entry_proc_U0_ap_done & entry_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ZplateHorContDelta_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ZplateHorContDelta_c_channel <= ap_sync_channel_write_ZplateHorContDelta_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ZplateHorContStart_c_channel <= 1'b0;
    end else begin
        if (((entry_proc_U0_ap_done & entry_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ZplateHorContStart_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ZplateHorContStart_c_channel <= ap_sync_channel_write_ZplateHorContStart_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ZplateVerContDelta_c_channel <= 1'b0;
    end else begin
        if (((entry_proc_U0_ap_done & entry_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ZplateVerContDelta_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ZplateVerContDelta_c_channel <= ap_sync_channel_write_ZplateVerContDelta_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_ZplateVerContStart_c_channel <= 1'b0;
    end else begin
        if (((entry_proc_U0_ap_done & entry_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_ZplateVerContStart_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_ZplateVerContStart_c_channel <= ap_sync_channel_write_ZplateVerContStart_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_bckgndId_c_channel <= 1'b0;
    end else begin
        if (((entry_proc_U0_ap_done & entry_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_bckgndId_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_bckgndId_c_channel <= ap_sync_channel_write_bckgndId_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_dpDynamicRange_c_channel <= 1'b0;
    end else begin
        if (((entry_proc_U0_ap_done & entry_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_dpDynamicRange_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_dpDynamicRange_c_channel <= ap_sync_channel_write_dpDynamicRange_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_dpYUVCoef_c_channel <= 1'b0;
    end else begin
        if (((entry_proc_U0_ap_done & entry_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_dpYUVCoef_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_dpYUVCoef_c_channel <= ap_sync_channel_write_dpYUVCoef_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_motionSpeed_c_channel <= 1'b0;
    end else begin
        if (((entry_proc_U0_ap_done & entry_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_motionSpeed_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_motionSpeed_c_channel <= ap_sync_channel_write_motionSpeed_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_passthruEndX_c_channel <= 1'b0;
    end else begin
        if (((entry_proc_U0_ap_done & entry_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_passthruEndX_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_passthruEndX_c_channel <= ap_sync_channel_write_passthruEndX_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_passthruEndY_c_channel <= 1'b0;
    end else begin
        if (((entry_proc_U0_ap_done & entry_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_passthruEndY_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_passthruEndY_c_channel <= ap_sync_channel_write_passthruEndY_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_passthruStartX_c_channel <= 1'b0;
    end else begin
        if (((entry_proc_U0_ap_done & entry_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_passthruStartX_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_passthruStartX_c_channel <= ap_sync_channel_write_passthruStartX_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_passthruStartY_c_channel <= 1'b0;
    end else begin
        if (((entry_proc_U0_ap_done & entry_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_passthruStartY_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_passthruStartY_c_channel <= ap_sync_channel_write_passthruStartY_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_tpgBackground_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_tpgBackground_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_tpgBackground_U0_ap_ready <= ap_sync_tpgBackground_U0_ap_ready;
        end
    end
end

assign AXIvideo2MultiPixStream_U0_ap_continue = 1'b1;

assign AXIvideo2MultiPixStream_U0_ap_start = ((ap_sync_reg_AXIvideo2MultiPixStream_U0_ap_ready ^ 1'b1) & ap_start);

assign MultiPixStream2AXIvideo_U0_ap_continue = ap_continue;

assign MultiPixStream2AXIvideo_U0_ap_start = ((ap_sync_reg_MultiPixStream2AXIvideo_U0_ap_ready ^ 1'b1) & ap_start);

assign ap_channel_done_ZplateHorContDelta_c_channel = ((ap_sync_reg_channel_write_ZplateHorContDelta_c_channel ^ 1'b1) & entry_proc_U0_ap_done);

assign ap_channel_done_ZplateHorContStart_c_channel = ((ap_sync_reg_channel_write_ZplateHorContStart_c_channel ^ 1'b1) & entry_proc_U0_ap_done);

assign ap_channel_done_ZplateVerContDelta_c_channel = ((ap_sync_reg_channel_write_ZplateVerContDelta_c_channel ^ 1'b1) & entry_proc_U0_ap_done);

assign ap_channel_done_ZplateVerContStart_c_channel = ((ap_sync_reg_channel_write_ZplateVerContStart_c_channel ^ 1'b1) & entry_proc_U0_ap_done);

assign ap_channel_done_bckgndId_c_channel = ((ap_sync_reg_channel_write_bckgndId_c_channel ^ 1'b1) & entry_proc_U0_ap_done);

assign ap_channel_done_dpDynamicRange_c_channel = ((ap_sync_reg_channel_write_dpDynamicRange_c_channel ^ 1'b1) & entry_proc_U0_ap_done);

assign ap_channel_done_dpYUVCoef_c_channel = ((ap_sync_reg_channel_write_dpYUVCoef_c_channel ^ 1'b1) & entry_proc_U0_ap_done);

assign ap_channel_done_motionSpeed_c_channel = ((ap_sync_reg_channel_write_motionSpeed_c_channel ^ 1'b1) & entry_proc_U0_ap_done);

assign ap_channel_done_passthruEndX_c_channel = ((ap_sync_reg_channel_write_passthruEndX_c_channel ^ 1'b1) & entry_proc_U0_ap_done);

assign ap_channel_done_passthruEndY_c_channel = ((ap_sync_reg_channel_write_passthruEndY_c_channel ^ 1'b1) & entry_proc_U0_ap_done);

assign ap_channel_done_passthruStartX_c_channel = ((ap_sync_reg_channel_write_passthruStartX_c_channel ^ 1'b1) & entry_proc_U0_ap_done);

assign ap_channel_done_passthruStartY_c_channel = ((ap_sync_reg_channel_write_passthruStartY_c_channel ^ 1'b1) & entry_proc_U0_ap_done);

assign ap_done = MultiPixStream2AXIvideo_U0_ap_done;

assign ap_idle = (tpgBackground_U0_ap_idle & (1'b1 ^ ZplateVerContDelta_c_channel_empty_n) & (1'b1 ^ ZplateVerContStart_c_channel_empty_n) & (1'b1 ^ ZplateHorContDelta_c_channel_empty_n) & (1'b1 ^ ZplateHorContStart_c_channel_empty_n) & (dpYUVCoef_c_channel_empty_n ^ 1'b1) & (dpDynamicRange_c_channel_empty_n ^ 1'b1) & (motionSpeed_c_channel_empty_n ^ 1'b1) & (bckgndId_c_channel_empty_n ^ 1'b1) & (passthruEndY_c_channel_empty_n ^ 1'b1) & (passthruEndX_c_channel_empty_n ^ 1'b1) & (passthruStartY_c_channel_empty_n ^ 1'b1) & (passthruStartX_c_channel_empty_n ^ 1'b1) & entry_proc_U0_ap_idle & MultiPixStream2AXIvideo_U0_ap_idle & AXIvideo2MultiPixStream_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_AXIvideo2MultiPixStream_U0_ap_ready = (ap_sync_reg_AXIvideo2MultiPixStream_U0_ap_ready | AXIvideo2MultiPixStream_U0_ap_ready);

assign ap_sync_MultiPixStream2AXIvideo_U0_ap_ready = (ap_sync_reg_MultiPixStream2AXIvideo_U0_ap_ready | MultiPixStream2AXIvideo_U0_ap_ready);

assign ap_sync_channel_write_ZplateHorContDelta_c_channel = ((ap_channel_done_ZplateHorContDelta_c_channel & ZplateHorContDelta_c_channel_full_n) | ap_sync_reg_channel_write_ZplateHorContDelta_c_channel);

assign ap_sync_channel_write_ZplateHorContStart_c_channel = ((ap_channel_done_ZplateHorContStart_c_channel & ZplateHorContStart_c_channel_full_n) | ap_sync_reg_channel_write_ZplateHorContStart_c_channel);

assign ap_sync_channel_write_ZplateVerContDelta_c_channel = ((ap_channel_done_ZplateVerContDelta_c_channel & ZplateVerContDelta_c_channel_full_n) | ap_sync_reg_channel_write_ZplateVerContDelta_c_channel);

assign ap_sync_channel_write_ZplateVerContStart_c_channel = ((ap_channel_done_ZplateVerContStart_c_channel & ZplateVerContStart_c_channel_full_n) | ap_sync_reg_channel_write_ZplateVerContStart_c_channel);

assign ap_sync_channel_write_bckgndId_c_channel = ((bckgndId_c_channel_full_n & ap_channel_done_bckgndId_c_channel) | ap_sync_reg_channel_write_bckgndId_c_channel);

assign ap_sync_channel_write_dpDynamicRange_c_channel = ((dpDynamicRange_c_channel_full_n & ap_channel_done_dpDynamicRange_c_channel) | ap_sync_reg_channel_write_dpDynamicRange_c_channel);

assign ap_sync_channel_write_dpYUVCoef_c_channel = ((dpYUVCoef_c_channel_full_n & ap_channel_done_dpYUVCoef_c_channel) | ap_sync_reg_channel_write_dpYUVCoef_c_channel);

assign ap_sync_channel_write_motionSpeed_c_channel = ((motionSpeed_c_channel_full_n & ap_channel_done_motionSpeed_c_channel) | ap_sync_reg_channel_write_motionSpeed_c_channel);

assign ap_sync_channel_write_passthruEndX_c_channel = ((passthruEndX_c_channel_full_n & ap_channel_done_passthruEndX_c_channel) | ap_sync_reg_channel_write_passthruEndX_c_channel);

assign ap_sync_channel_write_passthruEndY_c_channel = ((passthruEndY_c_channel_full_n & ap_channel_done_passthruEndY_c_channel) | ap_sync_reg_channel_write_passthruEndY_c_channel);

assign ap_sync_channel_write_passthruStartX_c_channel = ((passthruStartX_c_channel_full_n & ap_channel_done_passthruStartX_c_channel) | ap_sync_reg_channel_write_passthruStartX_c_channel);

assign ap_sync_channel_write_passthruStartY_c_channel = ((passthruStartY_c_channel_full_n & ap_channel_done_passthruStartY_c_channel) | ap_sync_reg_channel_write_passthruStartY_c_channel);

assign ap_sync_entry_proc_U0_ap_ready = (entry_proc_U0_ap_ready | ap_sync_reg_entry_proc_U0_ap_ready);

assign ap_sync_ready = (ap_sync_tpgBackground_U0_ap_ready & ap_sync_entry_proc_U0_ap_ready & ap_sync_MultiPixStream2AXIvideo_U0_ap_ready & ap_sync_AXIvideo2MultiPixStream_U0_ap_ready);

assign ap_sync_tpgBackground_U0_ap_ready = (tpgBackground_U0_ap_ready | ap_sync_reg_tpgBackground_U0_ap_ready);

assign entry_proc_U0_ap_continue = (ap_sync_channel_write_passthruStartY_c_channel & ap_sync_channel_write_passthruStartX_c_channel & ap_sync_channel_write_passthruEndY_c_channel & ap_sync_channel_write_passthruEndX_c_channel & ap_sync_channel_write_motionSpeed_c_channel & ap_sync_channel_write_dpYUVCoef_c_channel & ap_sync_channel_write_dpDynamicRange_c_channel & ap_sync_channel_write_bckgndId_c_channel & ap_sync_channel_write_ZplateVerContStart_c_channel & ap_sync_channel_write_ZplateVerContDelta_c_channel & ap_sync_channel_write_ZplateHorContStart_c_channel & ap_sync_channel_write_ZplateHorContDelta_c_channel);

assign entry_proc_U0_ap_start = ((ap_sync_reg_entry_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign fid = MultiPixStream2AXIvideo_U0_fid;

assign fid_ap_vld = MultiPixStream2AXIvideo_U0_fid_ap_vld;

assign m_axis_video_TDATA = MultiPixStream2AXIvideo_U0_m_axis_video_TDATA;

assign m_axis_video_TDEST = MultiPixStream2AXIvideo_U0_m_axis_video_TDEST;

assign m_axis_video_TID = MultiPixStream2AXIvideo_U0_m_axis_video_TID;

assign m_axis_video_TKEEP = MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP;

assign m_axis_video_TLAST = MultiPixStream2AXIvideo_U0_m_axis_video_TLAST;

assign m_axis_video_TSTRB = MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB;

assign m_axis_video_TUSER = MultiPixStream2AXIvideo_U0_m_axis_video_TUSER;

assign m_axis_video_TVALID = MultiPixStream2AXIvideo_U0_m_axis_video_TVALID;

assign s_axis_video_TREADY = AXIvideo2MultiPixStream_U0_s_axis_video_TREADY;

assign tpgBackground_U0_ap_continue = 1'b1;

assign tpgBackground_U0_ap_start = (passthruStartY_c_channel_empty_n & passthruStartX_c_channel_empty_n & passthruEndY_c_channel_empty_n & passthruEndX_c_channel_empty_n & motionSpeed_c_channel_empty_n & (ap_sync_reg_tpgBackground_U0_ap_ready ^ 1'b1) & dpYUVCoef_c_channel_empty_n & dpDynamicRange_c_channel_empty_n & bckgndId_c_channel_empty_n & ap_start & ZplateVerContStart_c_channel_empty_n & ZplateVerContDelta_c_channel_empty_n & ZplateHorContStart_c_channel_empty_n & ZplateHorContDelta_c_channel_empty_n);

endmodule //system_v_tpg_0_1_v_tpgHlsDataFlow
