// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_v_demosaic_0_1_DebayerRandBatG_Pipeline_VITIS_LOOP_833_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgRB_dout,
        imgRB_empty_n,
        imgRB_read,
        imgRgb_din,
        imgRgb_full_n,
        imgRgb_write,
        pixBuf_val_V_2_2_0560_i,
        pixBuf_val_V_2_1_0559_i,
        pixBuf_val_V_2_0_0558_i,
        pixBuf_val_V_1_2_0557_i,
        pixBuf_val_V_1_1_0556_i,
        pixBuf_val_V_1_0_0555_i,
        pixBuf_val_V_0_2_0_i,
        pixBuf_val_V_0_1_0_i,
        pixBuf_val_V_0_0_0_i,
        pixWindow_val_val_V_2_2_2_0_i,
        pixWindow_val_val_V_2_2_1_0_i,
        pixWindow_val_val_V_2_2_0_0_i,
        pixWindow_val_val_V_1_2_2_0_i,
        pixWindow_val_val_V_1_2_1_0_i,
        pixWindow_val_val_V_1_2_0_0_i,
        pixWindow_val_val_V_1_1_2_0_i,
        pixWindow_val_val_V_1_1_1_0_i,
        pixWindow_val_val_V_1_1_0_0_i,
        pixWindow_val_val_V_0_2_2_0_i,
        pixWindow_val_val_V_0_2_1_0_i,
        pixWindow_val_val_V_0_2_0_0_i,
        add_ln830_i,
        x_phase_i,
        xor_i,
        out_y_i,
        width_cast,
        lineBuffer_val_V_0_i_address0,
        lineBuffer_val_V_0_i_ce0,
        lineBuffer_val_V_0_i_we0,
        lineBuffer_val_V_0_i_d0,
        lineBuffer_val_V_0_i_address1,
        lineBuffer_val_V_0_i_ce1,
        lineBuffer_val_V_0_i_q1,
        lineBuffer_val_V_1_i_address0,
        lineBuffer_val_V_1_i_ce0,
        lineBuffer_val_V_1_i_we0,
        lineBuffer_val_V_1_i_d0,
        lineBuffer_val_V_1_i_address1,
        lineBuffer_val_V_1_i_ce1,
        lineBuffer_val_V_1_i_q1,
        cmp37_i,
        cmp140_i,
        pixBuf_val_V_2_2_1_i_out,
        pixBuf_val_V_2_2_1_i_out_ap_vld,
        pixBuf_val_V_2_1_1_i_out,
        pixBuf_val_V_2_1_1_i_out_ap_vld,
        pixBuf_val_V_2_0_1_i_out,
        pixBuf_val_V_2_0_1_i_out_ap_vld,
        pixBuf_val_V_1_2_1_i_out,
        pixBuf_val_V_1_2_1_i_out_ap_vld,
        pixBuf_val_V_1_1_1_i_out,
        pixBuf_val_V_1_1_1_i_out_ap_vld,
        pixBuf_val_V_1_0_1_i_out,
        pixBuf_val_V_1_0_1_i_out_ap_vld,
        pixBuf_val_V_0_2_1_i_out,
        pixBuf_val_V_0_2_1_i_out_ap_vld,
        pixBuf_val_V_0_1_1_i_out,
        pixBuf_val_V_0_1_1_i_out_ap_vld,
        pixBuf_val_V_0_0_1_i_out,
        pixBuf_val_V_0_0_1_i_out_ap_vld,
        pixWindow_val_val_V_2_1_2_2_i_out,
        pixWindow_val_val_V_2_1_2_2_i_out_ap_vld,
        pixWindow_val_val_V_2_1_1_2_i_out,
        pixWindow_val_val_V_2_1_1_2_i_out_ap_vld,
        pixWindow_val_val_V_2_1_0_2_i_out,
        pixWindow_val_val_V_2_1_0_2_i_out_ap_vld,
        pixWindow_val_val_V_1_1_2_i_out,
        pixWindow_val_val_V_1_1_2_i_out_ap_vld,
        pixWindow_val_val_V_1_1_1_i_out,
        pixWindow_val_val_V_1_1_1_i_out_ap_vld,
        pixWindow_val_val_V_1_1_0_i_out,
        pixWindow_val_val_V_1_1_0_i_out_ap_vld,
        pixWindow_val_val_V_1_0_2_i_out,
        pixWindow_val_val_V_1_0_2_i_out_ap_vld,
        pixWindow_val_val_V_1_0_1_i_out,
        pixWindow_val_val_V_1_0_1_i_out_ap_vld,
        pixWindow_val_val_V_1_0_0_i_out,
        pixWindow_val_val_V_1_0_0_i_out_ap_vld,
        pixWindow_val_val_V_0_1_2_2_i_out,
        pixWindow_val_val_V_0_1_2_2_i_out_ap_vld,
        pixWindow_val_val_V_0_1_1_2_i_out,
        pixWindow_val_val_V_0_1_1_2_i_out_ap_vld,
        pixWindow_val_val_V_0_1_0_2_i_out,
        pixWindow_val_val_V_0_1_0_2_i_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [47:0] imgRB_dout;
input   imgRB_empty_n;
output   imgRB_read;
output  [47:0] imgRgb_din;
input   imgRgb_full_n;
output   imgRgb_write;
input  [9:0] pixBuf_val_V_2_2_0560_i;
input  [9:0] pixBuf_val_V_2_1_0559_i;
input  [9:0] pixBuf_val_V_2_0_0558_i;
input  [9:0] pixBuf_val_V_1_2_0557_i;
input  [9:0] pixBuf_val_V_1_1_0556_i;
input  [9:0] pixBuf_val_V_1_0_0555_i;
input  [9:0] pixBuf_val_V_0_2_0_i;
input  [9:0] pixBuf_val_V_0_1_0_i;
input  [9:0] pixBuf_val_V_0_0_0_i;
input  [9:0] pixWindow_val_val_V_2_2_2_0_i;
input  [9:0] pixWindow_val_val_V_2_2_1_0_i;
input  [9:0] pixWindow_val_val_V_2_2_0_0_i;
input  [9:0] pixWindow_val_val_V_1_2_2_0_i;
input  [9:0] pixWindow_val_val_V_1_2_1_0_i;
input  [9:0] pixWindow_val_val_V_1_2_0_0_i;
input  [9:0] pixWindow_val_val_V_1_1_2_0_i;
input  [9:0] pixWindow_val_val_V_1_1_1_0_i;
input  [9:0] pixWindow_val_val_V_1_1_0_0_i;
input  [9:0] pixWindow_val_val_V_0_2_2_0_i;
input  [9:0] pixWindow_val_val_V_0_2_1_0_i;
input  [9:0] pixWindow_val_val_V_0_2_0_0_i;
input  [10:0] add_ln830_i;
input  [0:0] x_phase_i;
input  [14:0] xor_i;
input  [11:0] out_y_i;
input  [10:0] width_cast;
output  [10:0] lineBuffer_val_V_0_i_address0;
output   lineBuffer_val_V_0_i_ce0;
output   lineBuffer_val_V_0_i_we0;
output  [29:0] lineBuffer_val_V_0_i_d0;
output  [10:0] lineBuffer_val_V_0_i_address1;
output   lineBuffer_val_V_0_i_ce1;
input  [29:0] lineBuffer_val_V_0_i_q1;
output  [10:0] lineBuffer_val_V_1_i_address0;
output   lineBuffer_val_V_1_i_ce0;
output   lineBuffer_val_V_1_i_we0;
output  [29:0] lineBuffer_val_V_1_i_d0;
output  [10:0] lineBuffer_val_V_1_i_address1;
output   lineBuffer_val_V_1_i_ce1;
input  [29:0] lineBuffer_val_V_1_i_q1;
input  [0:0] cmp37_i;
input  [0:0] cmp140_i;
output  [9:0] pixBuf_val_V_2_2_1_i_out;
output   pixBuf_val_V_2_2_1_i_out_ap_vld;
output  [9:0] pixBuf_val_V_2_1_1_i_out;
output   pixBuf_val_V_2_1_1_i_out_ap_vld;
output  [9:0] pixBuf_val_V_2_0_1_i_out;
output   pixBuf_val_V_2_0_1_i_out_ap_vld;
output  [9:0] pixBuf_val_V_1_2_1_i_out;
output   pixBuf_val_V_1_2_1_i_out_ap_vld;
output  [9:0] pixBuf_val_V_1_1_1_i_out;
output   pixBuf_val_V_1_1_1_i_out_ap_vld;
output  [9:0] pixBuf_val_V_1_0_1_i_out;
output   pixBuf_val_V_1_0_1_i_out_ap_vld;
output  [9:0] pixBuf_val_V_0_2_1_i_out;
output   pixBuf_val_V_0_2_1_i_out_ap_vld;
output  [9:0] pixBuf_val_V_0_1_1_i_out;
output   pixBuf_val_V_0_1_1_i_out_ap_vld;
output  [9:0] pixBuf_val_V_0_0_1_i_out;
output   pixBuf_val_V_0_0_1_i_out_ap_vld;
output  [9:0] pixWindow_val_val_V_2_1_2_2_i_out;
output   pixWindow_val_val_V_2_1_2_2_i_out_ap_vld;
output  [9:0] pixWindow_val_val_V_2_1_1_2_i_out;
output   pixWindow_val_val_V_2_1_1_2_i_out_ap_vld;
output  [9:0] pixWindow_val_val_V_2_1_0_2_i_out;
output   pixWindow_val_val_V_2_1_0_2_i_out_ap_vld;
output  [9:0] pixWindow_val_val_V_1_1_2_i_out;
output   pixWindow_val_val_V_1_1_2_i_out_ap_vld;
output  [9:0] pixWindow_val_val_V_1_1_1_i_out;
output   pixWindow_val_val_V_1_1_1_i_out_ap_vld;
output  [9:0] pixWindow_val_val_V_1_1_0_i_out;
output   pixWindow_val_val_V_1_1_0_i_out_ap_vld;
output  [9:0] pixWindow_val_val_V_1_0_2_i_out;
output   pixWindow_val_val_V_1_0_2_i_out_ap_vld;
output  [9:0] pixWindow_val_val_V_1_0_1_i_out;
output   pixWindow_val_val_V_1_0_1_i_out_ap_vld;
output  [9:0] pixWindow_val_val_V_1_0_0_i_out;
output   pixWindow_val_val_V_1_0_0_i_out_ap_vld;
output  [9:0] pixWindow_val_val_V_0_1_2_2_i_out;
output   pixWindow_val_val_V_0_1_2_2_i_out_ap_vld;
output  [9:0] pixWindow_val_val_V_0_1_1_2_i_out;
output   pixWindow_val_val_V_0_1_1_2_i_out_ap_vld;
output  [9:0] pixWindow_val_val_V_0_1_0_2_i_out;
output   pixWindow_val_val_V_0_1_0_2_i_out_ap_vld;

reg ap_idle;
reg imgRB_read;
reg imgRgb_write;
reg lineBuffer_val_V_0_i_ce0;
reg lineBuffer_val_V_0_i_we0;
reg lineBuffer_val_V_0_i_ce1;
reg lineBuffer_val_V_1_i_ce0;
reg lineBuffer_val_V_1_i_we0;
reg lineBuffer_val_V_1_i_ce1;
reg pixBuf_val_V_2_2_1_i_out_ap_vld;
reg pixBuf_val_V_2_1_1_i_out_ap_vld;
reg pixBuf_val_V_2_0_1_i_out_ap_vld;
reg pixBuf_val_V_1_2_1_i_out_ap_vld;
reg pixBuf_val_V_1_1_1_i_out_ap_vld;
reg pixBuf_val_V_1_0_1_i_out_ap_vld;
reg pixBuf_val_V_0_2_1_i_out_ap_vld;
reg pixBuf_val_V_0_1_1_i_out_ap_vld;
reg pixBuf_val_V_0_0_1_i_out_ap_vld;
reg pixWindow_val_val_V_2_1_2_2_i_out_ap_vld;
reg pixWindow_val_val_V_2_1_1_2_i_out_ap_vld;
reg pixWindow_val_val_V_2_1_0_2_i_out_ap_vld;
reg pixWindow_val_val_V_1_1_2_i_out_ap_vld;
reg pixWindow_val_val_V_1_1_1_i_out_ap_vld;
reg pixWindow_val_val_V_1_1_0_i_out_ap_vld;
reg pixWindow_val_val_V_1_0_2_i_out_ap_vld;
reg pixWindow_val_val_V_1_0_1_i_out_ap_vld;
reg pixWindow_val_val_V_1_0_0_i_out_ap_vld;
reg pixWindow_val_val_V_0_1_2_2_i_out_ap_vld;
reg pixWindow_val_val_V_0_1_1_2_i_out_ap_vld;
reg pixWindow_val_val_V_0_1_0_2_i_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln833_reg_2415;
reg   [0:0] icmp_ln843_reg_2424;
wire   [0:0] cmp37_i_read_reg_2411;
reg    ap_predicate_op127_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg   [0:0] tmp_14_reg_2462;
reg   [0:0] tmp_14_reg_2462_pp0_iter3_reg;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln833_fu_888_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    imgRB_blk_n;
wire    ap_block_pp0_stage0;
reg    imgRgb_blk_n;
reg   [9:0] pix_val_V_8_reg_687;
reg   [9:0] pix_val_V_8_reg_687_pp0_iter3_reg;
reg    ap_block_pp0_stage0_11001;
reg   [9:0] pix_val_V_7_reg_697;
reg   [9:0] pix_val_V_7_reg_697_pp0_iter3_reg;
reg   [9:0] pix_val_V_reg_707;
reg   [9:0] pix_val_V_reg_707_pp0_iter3_reg;
reg   [0:0] icmp_ln833_reg_2415_pp0_iter1_reg;
reg   [0:0] icmp_ln833_reg_2415_pp0_iter2_reg;
wire   [63:0] zext_ln833_1_fu_900_p1;
reg   [63:0] zext_ln833_1_reg_2419;
reg   [63:0] zext_ln833_1_reg_2419_pp0_iter1_reg;
wire   [0:0] icmp_ln843_fu_916_p2;
reg   [0:0] icmp_ln843_reg_2424_pp0_iter1_reg;
reg   [10:0] lineBuffer_val_V_0_i_addr_reg_2428;
wire   [0:0] cmp110_i_fu_922_p2;
reg   [0:0] cmp110_i_reg_2439;
reg   [0:0] cmp110_i_reg_2439_pp0_iter1_reg;
wire   [0:0] icmp_ln966_fu_944_p2;
reg   [0:0] icmp_ln966_reg_2455;
reg   [0:0] icmp_ln966_reg_2455_pp0_iter1_reg;
reg   [0:0] icmp_ln966_reg_2455_pp0_iter2_reg;
reg   [0:0] icmp_ln966_reg_2455_pp0_iter3_reg;
reg   [0:0] tmp_14_reg_2462_pp0_iter1_reg;
reg   [0:0] tmp_14_reg_2462_pp0_iter2_reg;
reg   [9:0] pixWindow_val_val_V_0_1_0_4_reg_2466;
reg   [9:0] pixWindow_val_val_V_0_1_1_4_reg_2471;
reg   [9:0] pixWindow_val_val_V_0_1_2_4_reg_2476;
reg   [9:0] pixWindow_val_val_V_1_0_0_2_reg_2481;
reg   [9:0] pixWindow_val_val_V_1_0_1_2_reg_2486;
reg   [9:0] pixWindow_val_val_V_1_0_2_2_reg_2491;
reg   [9:0] pixWindow_val_val_V_1_1_0_5_reg_2496;
reg   [9:0] pixWindow_val_val_V_1_1_1_5_reg_2501;
reg   [9:0] pixWindow_val_val_V_1_1_2_5_reg_2506;
reg   [9:0] pixWindow_val_val_V_2_1_0_4_reg_2511;
reg   [9:0] pixWindow_val_val_V_2_1_1_4_reg_2516;
reg   [9:0] pixWindow_val_val_V_2_1_2_4_reg_2521;
wire   [11:0] ret_33_fu_1565_p2;
reg   [11:0] ret_33_reg_2526;
wire   [11:0] ret_35_fu_1593_p2;
reg   [11:0] ret_35_reg_2531;
wire   [10:0] ret_56_fu_1599_p2;
reg   [10:0] ret_56_reg_2536;
wire   [10:0] ret_57_fu_1605_p2;
reg   [10:0] ret_57_reg_2541;
wire   [10:0] ret_58_fu_1611_p2;
reg   [10:0] ret_58_reg_2546;
wire   [10:0] ret_59_fu_1617_p2;
reg   [10:0] ret_59_reg_2551;
wire   [10:0] ret_60_fu_1623_p2;
reg   [10:0] ret_60_reg_2556;
wire   [10:0] ret_61_fu_1629_p2;
reg   [10:0] ret_61_reg_2561;
wire   [10:0] ret_62_fu_1635_p2;
reg   [10:0] ret_62_reg_2566;
wire   [10:0] ret_63_fu_1641_p2;
reg   [10:0] ret_63_reg_2571;
wire   [13:0] ret_64_fu_2031_p2;
reg   [13:0] ret_64_reg_2576;
wire   [13:0] ret_65_fu_2049_p2;
reg   [13:0] ret_65_reg_2581;
reg   [0:0] tmp_10_reg_2586;
reg   [3:0] tmp_11_reg_2592;
reg   [3:0] tmp_13_reg_2597;
wire   [0:0] and_ln995_fu_2096_p2;
reg   [0:0] and_ln995_reg_2602;
reg    ap_condition_exit_pp0_iter2_stage0;
reg   [9:0] ap_phi_mux_down_val_V_2_phi_fu_663_p4;
wire   [9:0] select_ln909_9_fu_1259_p3;
wire   [9:0] ap_phi_reg_pp0_iter2_down_val_V_2_reg_660;
reg   [9:0] ap_phi_mux_down_val_V_1_phi_fu_672_p4;
wire   [9:0] select_ln909_10_fu_1267_p3;
wire   [9:0] ap_phi_reg_pp0_iter2_down_val_V_1_reg_669;
reg   [9:0] ap_phi_mux_down_val_V_phi_fu_681_p4;
wire   [9:0] select_ln909_11_fu_1275_p3;
wire   [9:0] ap_phi_reg_pp0_iter2_down_val_V_reg_678;
reg   [9:0] ap_phi_mux_pix_val_V_8_phi_fu_690_p4;
wire   [9:0] select_ln909_3_fu_1211_p3;
wire   [9:0] ap_phi_reg_pp0_iter2_pix_val_V_8_reg_687;
reg   [9:0] ap_phi_mux_pix_val_V_7_phi_fu_700_p4;
wire   [9:0] select_ln909_4_fu_1219_p3;
wire   [9:0] ap_phi_reg_pp0_iter2_pix_val_V_7_reg_697;
reg   [9:0] ap_phi_mux_pix_val_V_phi_fu_710_p4;
wire   [9:0] select_ln909_5_fu_1227_p3;
wire   [9:0] ap_phi_reg_pp0_iter2_pix_val_V_reg_707;
reg   [9:0] ap_phi_mux_left_val_V_2_phi_fu_720_p4;
wire   [9:0] select_ln909_6_fu_1235_p3;
wire   [9:0] ap_phi_reg_pp0_iter2_left_val_V_2_reg_717;
reg   [9:0] ap_phi_mux_left_val_V_1_phi_fu_729_p4;
wire   [9:0] select_ln909_7_fu_1243_p3;
wire   [9:0] ap_phi_reg_pp0_iter2_left_val_V_1_reg_726;
reg   [9:0] ap_phi_mux_left_val_V_phi_fu_738_p4;
wire   [9:0] select_ln909_8_fu_1251_p3;
wire   [9:0] ap_phi_reg_pp0_iter2_left_val_V_reg_735;
reg   [9:0] ap_phi_mux_up_val_V_2_phi_fu_747_p4;
wire   [9:0] select_ln909_fu_1187_p3;
wire   [9:0] ap_phi_reg_pp0_iter2_up_val_V_2_reg_744;
reg   [9:0] ap_phi_mux_up_val_V_1_phi_fu_756_p4;
wire   [9:0] select_ln909_1_fu_1195_p3;
wire   [9:0] ap_phi_reg_pp0_iter2_up_val_V_1_reg_753;
reg   [9:0] ap_phi_mux_up_val_V_phi_fu_765_p4;
wire   [9:0] select_ln909_2_fu_1203_p3;
wire   [9:0] ap_phi_reg_pp0_iter2_up_val_V_reg_762;
reg   [10:0] x_fu_202;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_z;
wire   [10:0] x_8_fu_894_p2;
reg   [9:0] pixWindow_val_val_V_0_1_0_fu_206;
reg   [9:0] pixWindow_val_val_V_0_1_1_fu_210;
reg   [9:0] pixWindow_val_val_V_0_1_2_fu_214;
reg   [9:0] pixWindow_val_val_V_1_0_0_fu_218;
reg   [9:0] pixWindow_val_val_V_1_0_1_fu_222;
reg   [9:0] pixWindow_val_val_V_1_0_2_fu_226;
reg   [9:0] pixWindow_val_val_V_1_1_0_fu_230;
reg   [9:0] pixWindow_val_val_V_1_1_1_fu_234;
reg   [9:0] pixWindow_val_val_V_1_1_2_fu_238;
reg   [9:0] pixWindow_val_val_V_2_1_0_fu_242;
reg   [9:0] pixWindow_val_val_V_2_1_1_fu_246;
reg   [9:0] pixWindow_val_val_V_2_1_2_fu_250;
reg   [9:0] pixWindow_val_val_V_2_2_0_fu_254;
wire   [9:0] pixBuf_val_V_0_0_2_fu_969_p1;
wire   [9:0] pixBuf_val_V_0_0_fu_1062_p1;
reg   [9:0] pixWindow_val_val_V_2_2_1_fu_258;
wire   [9:0] pixBuf_val_V_0_1_fu_1066_p4;
reg   [9:0] pixWindow_val_val_V_2_2_2_fu_262;
wire   [9:0] pixBuf_val_V_0_2_fu_1076_p4;
reg   [9:0] pixWindow_val_val_V_1_2_0_fu_266;
reg   [9:0] pixWindow_val_val_V_1_2_1_fu_270;
reg   [9:0] pixWindow_val_val_V_1_2_2_fu_274;
reg   [9:0] pixWindow_val_val_V_0_2_0_fu_278;
wire   [9:0] pixBuf_val_V_2_0_fu_993_p1;
reg   [9:0] pixWindow_val_val_V_0_2_1_fu_282;
reg   [9:0] pixWindow_val_val_V_0_2_2_fu_286;
reg    ap_block_pp0_stage0_01001;
wire   [11:0] zext_ln833_fu_884_p1;
wire   [0:0] trunc_ln841_fu_906_p1;
wire   [0:0] xor_ln966_fu_928_p2;
wire   [0:0] xor_ln966_1_fu_934_p2;
wire   [14:0] zext_ln966_fu_940_p1;
wire   [11:0] out_x_fu_910_p2;
wire   [11:0] or_ln1004_fu_950_p2;
wire   [9:0] select_ln927_2_fu_1297_p3;
wire   [9:0] select_ln927_1_fu_1290_p3;
wire   [9:0] select_ln927_fu_1283_p3;
wire   [10:0] zext_ln1526_fu_1315_p1;
wire   [10:0] zext_ln1526_10_fu_1319_p1;
wire   [10:0] ret_fu_1323_p2;
wire   [9:0] empty_160_fu_1329_p1;
wire   [0:0] abscond_i_fu_1339_p2;
wire   [9:0] neg_i_fu_1333_p2;
wire   [10:0] zext_ln1526_11_fu_1353_p1;
wire   [10:0] zext_ln1526_12_fu_1357_p1;
wire   [10:0] ret_27_fu_1361_p2;
wire   [9:0] empty_161_fu_1367_p1;
wire   [0:0] abscond26_i_fu_1377_p2;
wire   [9:0] neg25_i_fu_1371_p2;
wire   [10:0] zext_ln1526_13_fu_1391_p1;
wire   [10:0] zext_ln1526_14_fu_1395_p1;
wire   [10:0] ret_28_fu_1399_p2;
wire   [9:0] empty_162_fu_1405_p1;
wire   [0:0] abscond29_i_fu_1415_p2;
wire   [9:0] neg28_i_fu_1409_p2;
wire   [10:0] zext_ln1526_15_fu_1429_p1;
wire   [10:0] zext_ln1526_16_fu_1433_p1;
wire   [10:0] ret_29_fu_1437_p2;
wire   [9:0] empty_163_fu_1443_p1;
wire   [0:0] abscond32_i_fu_1453_p2;
wire   [9:0] neg31_i_fu_1447_p2;
wire   [10:0] zext_ln1526_17_fu_1467_p1;
wire   [10:0] zext_ln1526_18_fu_1471_p1;
wire   [10:0] ret_30_fu_1475_p2;
wire   [9:0] empty_164_fu_1481_p1;
wire   [0:0] abscond35_i_fu_1491_p2;
wire   [9:0] neg34_i_fu_1485_p2;
wire   [10:0] zext_ln1526_19_fu_1505_p1;
wire   [10:0] zext_ln1526_20_fu_1509_p1;
wire   [10:0] ret_31_fu_1513_p2;
wire   [9:0] empty_165_fu_1519_p1;
wire   [0:0] abscond38_i_fu_1529_p2;
wire   [9:0] neg37_i_fu_1523_p2;
wire   [9:0] DRh_fu_1345_p3;
wire   [9:0] DGh_fu_1421_p3;
wire   [10:0] zext_ln225_1_fu_1547_p1;
wire   [10:0] zext_ln225_fu_1543_p1;
wire   [10:0] ret_54_fu_1551_p2;
wire   [9:0] DBh_V_fu_1497_p3;
wire   [11:0] zext_ln225_2_fu_1557_p1;
wire   [11:0] zext_ln225_3_fu_1561_p1;
wire   [9:0] DRv_V_fu_1383_p3;
wire   [9:0] DGv_V_fu_1459_p3;
wire   [10:0] zext_ln225_5_fu_1575_p1;
wire   [10:0] zext_ln225_4_fu_1571_p1;
wire   [10:0] ret_55_fu_1579_p2;
wire   [9:0] DBv_V_fu_1535_p3;
wire   [11:0] zext_ln225_6_fu_1585_p1;
wire   [11:0] zext_ln225_7_fu_1589_p1;
wire  signed [11:0] sext_ln225_1_fu_1714_p1;
wire  signed [11:0] sext_ln225_fu_1711_p1;
wire   [11:0] ret_38_fu_1717_p2;
wire   [11:0] sub_ln1543_fu_1731_p2;
wire   [10:0] trunc_ln1543_i_fu_1737_p4;
wire  signed [11:0] sext_ln1543_fu_1747_p1;
wire   [12:0] zext_ln1543_fu_1751_p1;
wire   [10:0] trunc_ln1543_3_i_fu_1761_p4;
wire  signed [11:0] sext_ln1543_1_fu_1771_p1;
wire   [0:0] tmp_fu_1723_p3;
wire   [12:0] sub_ln1543_2_fu_1755_p2;
wire   [12:0] zext_ln1543_1_fu_1775_p1;
wire  signed [11:0] sext_ln225_3_fu_1794_p1;
wire  signed [11:0] sext_ln225_2_fu_1791_p1;
wire   [11:0] ret_42_fu_1797_p2;
wire   [11:0] sub_ln1543_3_fu_1811_p2;
wire   [10:0] trunc_ln1543_1_i_fu_1817_p4;
wire  signed [11:0] sext_ln1543_2_fu_1827_p1;
wire   [12:0] zext_ln1543_2_fu_1831_p1;
wire   [10:0] trunc_ln1543_5_i_fu_1841_p4;
wire  signed [11:0] sext_ln1543_3_fu_1851_p1;
wire   [0:0] tmp_7_fu_1803_p3;
wire   [12:0] sub_ln1543_4_fu_1835_p2;
wire   [12:0] zext_ln1543_3_fu_1855_p1;
wire  signed [11:0] sext_ln225_5_fu_1870_p1;
wire  signed [11:0] sext_ln225_4_fu_1867_p1;
wire   [11:0] ret_46_fu_1873_p2;
wire   [11:0] sub_ln1543_5_fu_1887_p2;
wire   [10:0] trunc_ln1543_2_i_fu_1893_p4;
wire  signed [11:0] sext_ln1543_4_fu_1903_p1;
wire   [12:0] zext_ln1543_4_fu_1907_p1;
wire   [10:0] trunc_ln1543_7_i_fu_1917_p4;
wire  signed [11:0] sext_ln1543_5_fu_1927_p1;
wire   [0:0] tmp_8_fu_1879_p3;
wire   [12:0] sub_ln1543_6_fu_1911_p2;
wire   [12:0] zext_ln1543_5_fu_1931_p1;
wire  signed [11:0] sext_ln225_7_fu_1946_p1;
wire  signed [11:0] sext_ln225_6_fu_1943_p1;
wire   [11:0] ret_50_fu_1949_p2;
wire   [11:0] sub_ln1543_7_fu_1963_p2;
wire   [10:0] trunc_ln1543_10_i_fu_1969_p4;
wire  signed [11:0] sext_ln1543_6_fu_1979_p1;
wire   [12:0] zext_ln1543_6_fu_1983_p1;
wire   [10:0] trunc_ln1543_9_i_fu_1993_p4;
wire  signed [11:0] sext_ln1543_7_fu_2003_p1;
wire   [0:0] tmp_9_fu_1955_p3;
wire   [12:0] sub_ln1543_8_fu_1987_p2;
wire   [12:0] zext_ln1543_7_fu_2007_p1;
wire   [0:0] icmp_ln1057_fu_1707_p2;
wire   [12:0] ret_39_fu_1779_p3;
wire   [12:0] ret_47_fu_1935_p3;
wire   [12:0] select_ln1057_fu_2019_p3;
wire   [13:0] zext_ln1526_21_fu_1787_p1;
wire  signed [13:0] sext_ln1057_fu_2027_p1;
wire   [12:0] ret_43_fu_1859_p3;
wire   [12:0] ret_51_fu_2011_p3;
wire   [12:0] select_ln1057_1_fu_2037_p3;
wire  signed [13:0] sext_ln1057_1_fu_2045_p1;
wire   [0:0] tmp_12_fu_2073_p3;
wire   [0:0] xor_ln966_2_fu_2091_p2;
wire   [0:0] xor_ln994_fu_2113_p2;
wire   [0:0] icmp_ln994_fu_2108_p2;
wire   [0:0] or_ln994_fu_2126_p2;
wire   [9:0] select_ln994_fu_2118_p3;
wire   [9:0] trunc_ln960_1_fu_2105_p1;
wire   [9:0] r_3_fu_2131_p3;
wire   [9:0] r_4_fu_2144_p3;
wire   [0:0] icmp_ln995_fu_2139_p2;
wire   [9:0] trunc_ln960_fu_2102_p1;
wire   [0:0] or_ln995_fu_2165_p2;
wire   [9:0] select_ln995_fu_2158_p3;
wire   [9:0] select_ln995_1_fu_2169_p3;
wire   [9:0] r_5_fu_2151_p3;
wire   [9:0] b_3_fu_2177_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op96_load_state1;
reg    ap_enable_operation_96;
reg    ap_enable_state1_pp0_iter0_stage0;
reg    ap_predicate_op109_load_state2;
reg    ap_enable_operation_109;
reg    ap_enable_state2_pp0_iter1_stage0;
reg    ap_predicate_op132_store_state2;
reg    ap_enable_operation_132;
reg    ap_predicate_op98_load_state1;
reg    ap_enable_operation_98;
reg    ap_predicate_op113_load_state2;
reg    ap_enable_operation_113;
reg    ap_predicate_op177_store_state3;
reg    ap_enable_operation_177;
reg    ap_enable_state3_pp0_iter2_stage0;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1378;
reg    ap_condition_1382;
reg    ap_condition_1386;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

system_v_demosaic_0_1_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixWindow_val_val_V_0_1_0_fu_206 <= pixWindow_val_val_V_0_2_0_0_i;
        end else if (((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixWindow_val_val_V_0_1_0_fu_206 <= pixWindow_val_val_V_0_2_0_fu_278;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixWindow_val_val_V_0_1_1_fu_210 <= pixWindow_val_val_V_0_2_1_0_i;
        end else if (((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixWindow_val_val_V_0_1_1_fu_210 <= pixWindow_val_val_V_0_2_1_fu_282;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixWindow_val_val_V_0_1_2_fu_214 <= pixWindow_val_val_V_0_2_2_0_i;
        end else if (((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixWindow_val_val_V_0_1_2_fu_214 <= pixWindow_val_val_V_0_2_2_fu_286;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pixWindow_val_val_V_0_2_0_fu_278 <= pixBuf_val_V_2_0_0558_i;
        end else if ((1'b1 == ap_condition_1378)) begin
            pixWindow_val_val_V_0_2_0_fu_278 <= pixBuf_val_V_2_0_fu_993_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pixWindow_val_val_V_0_2_1_fu_282 <= pixBuf_val_V_2_1_0559_i;
        end else if ((1'b1 == ap_condition_1378)) begin
            pixWindow_val_val_V_0_2_1_fu_282 <= {{lineBuffer_val_V_1_i_q1[19:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pixWindow_val_val_V_0_2_2_fu_286 <= pixBuf_val_V_2_2_0560_i;
        end else if ((1'b1 == ap_condition_1378)) begin
            pixWindow_val_val_V_0_2_2_fu_286 <= {{lineBuffer_val_V_1_i_q1[29:20]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixWindow_val_val_V_1_0_0_fu_218 <= pixWindow_val_val_V_1_1_0_0_i;
        end else if (((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixWindow_val_val_V_1_0_0_fu_218 <= ap_phi_mux_pix_val_V_phi_fu_710_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixWindow_val_val_V_1_0_1_fu_222 <= pixWindow_val_val_V_1_1_1_0_i;
        end else if (((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixWindow_val_val_V_1_0_1_fu_222 <= ap_phi_mux_pix_val_V_7_phi_fu_700_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixWindow_val_val_V_1_0_2_fu_226 <= pixWindow_val_val_V_1_1_2_0_i;
        end else if (((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixWindow_val_val_V_1_0_2_fu_226 <= ap_phi_mux_pix_val_V_8_phi_fu_690_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixWindow_val_val_V_1_1_0_fu_230 <= pixWindow_val_val_V_1_2_0_0_i;
        end else if (((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixWindow_val_val_V_1_1_0_fu_230 <= pixWindow_val_val_V_1_2_0_fu_266;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixWindow_val_val_V_1_1_1_fu_234 <= pixWindow_val_val_V_1_2_1_0_i;
        end else if (((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixWindow_val_val_V_1_1_1_fu_234 <= pixWindow_val_val_V_1_2_1_fu_270;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixWindow_val_val_V_1_1_2_fu_238 <= pixWindow_val_val_V_1_2_2_0_i;
        end else if (((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixWindow_val_val_V_1_1_2_fu_238 <= pixWindow_val_val_V_1_2_2_fu_274;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pixWindow_val_val_V_1_2_0_fu_266 <= pixBuf_val_V_1_0_0555_i;
        end else if ((1'b1 == ap_condition_1378)) begin
            pixWindow_val_val_V_1_2_0_fu_266 <= pixBuf_val_V_0_0_2_fu_969_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pixWindow_val_val_V_1_2_1_fu_270 <= pixBuf_val_V_1_1_0556_i;
        end else if ((1'b1 == ap_condition_1378)) begin
            pixWindow_val_val_V_1_2_1_fu_270 <= {{lineBuffer_val_V_0_i_q1[19:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pixWindow_val_val_V_1_2_2_fu_274 <= pixBuf_val_V_1_2_0557_i;
        end else if ((1'b1 == ap_condition_1378)) begin
            pixWindow_val_val_V_1_2_2_fu_274 <= {{lineBuffer_val_V_0_i_q1[29:20]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixWindow_val_val_V_2_1_0_fu_242 <= pixWindow_val_val_V_2_2_0_0_i;
        end else if (((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixWindow_val_val_V_2_1_0_fu_242 <= pixWindow_val_val_V_2_2_0_fu_254;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixWindow_val_val_V_2_1_1_fu_246 <= pixWindow_val_val_V_2_2_1_0_i;
        end else if (((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixWindow_val_val_V_2_1_1_fu_246 <= pixWindow_val_val_V_2_2_1_fu_258;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixWindow_val_val_V_2_1_2_fu_250 <= pixWindow_val_val_V_2_2_2_0_i;
        end else if (((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixWindow_val_val_V_2_1_2_fu_250 <= pixWindow_val_val_V_2_2_2_fu_262;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pixWindow_val_val_V_2_2_0_fu_254 <= pixBuf_val_V_0_0_0_i;
        end else if ((1'b1 == ap_condition_1386)) begin
            pixWindow_val_val_V_2_2_0_fu_254 <= pixBuf_val_V_0_0_fu_1062_p1;
        end else if ((1'b1 == ap_condition_1382)) begin
            pixWindow_val_val_V_2_2_0_fu_254 <= pixBuf_val_V_0_0_2_fu_969_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pixWindow_val_val_V_2_2_1_fu_258 <= pixBuf_val_V_0_1_0_i;
        end else if ((1'b1 == ap_condition_1386)) begin
            pixWindow_val_val_V_2_2_1_fu_258 <= {{imgRB_dout[25:16]}};
        end else if ((1'b1 == ap_condition_1382)) begin
            pixWindow_val_val_V_2_2_1_fu_258 <= {{lineBuffer_val_V_0_i_q1[19:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pixWindow_val_val_V_2_2_2_fu_262 <= pixBuf_val_V_0_2_0_i;
        end else if ((1'b1 == ap_condition_1386)) begin
            pixWindow_val_val_V_2_2_2_fu_262 <= {{imgRB_dout[41:32]}};
        end else if ((1'b1 == ap_condition_1382)) begin
            pixWindow_val_val_V_2_2_2_fu_262 <= {{lineBuffer_val_V_0_i_q1[29:20]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd0) & (icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0))) begin
            pix_val_V_7_reg_697 <= pixWindow_val_val_V_1_1_1_fu_234;
        end else if (((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1) & (icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0))) begin
            pix_val_V_7_reg_697 <= select_ln909_4_fu_1219_p3;
        end else if (~(icmp_ln833_reg_2415_pp0_iter1_reg == 1'd1)) begin
            pix_val_V_7_reg_697 <= ap_phi_reg_pp0_iter2_pix_val_V_7_reg_697;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd0) & (icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0))) begin
            pix_val_V_8_reg_687 <= pixWindow_val_val_V_1_1_2_fu_238;
        end else if (((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1) & (icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0))) begin
            pix_val_V_8_reg_687 <= select_ln909_3_fu_1211_p3;
        end else if (~(icmp_ln833_reg_2415_pp0_iter1_reg == 1'd1)) begin
            pix_val_V_8_reg_687 <= ap_phi_reg_pp0_iter2_pix_val_V_8_reg_687;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd0) & (icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0))) begin
            pix_val_V_reg_707 <= pixWindow_val_val_V_1_1_0_fu_230;
        end else if (((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1) & (icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0))) begin
            pix_val_V_reg_707 <= select_ln909_5_fu_1227_p3;
        end else if (~(icmp_ln833_reg_2415_pp0_iter1_reg == 1'd1)) begin
            pix_val_V_reg_707 <= ap_phi_reg_pp0_iter2_pix_val_V_reg_707;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln833_fu_888_p2 == 1'd0) & (ap_start_int == 1'b1))) begin
            x_fu_202 <= x_8_fu_894_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_202 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln995_reg_2602 <= and_ln995_fu_2096_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln833_reg_2415_pp0_iter2_reg <= icmp_ln833_reg_2415_pp0_iter1_reg;
        icmp_ln966_reg_2455_pp0_iter2_reg <= icmp_ln966_reg_2455_pp0_iter1_reg;
        icmp_ln966_reg_2455_pp0_iter3_reg <= icmp_ln966_reg_2455_pp0_iter2_reg;
        pix_val_V_7_reg_697_pp0_iter3_reg <= pix_val_V_7_reg_697;
        pix_val_V_8_reg_687_pp0_iter3_reg <= pix_val_V_8_reg_687;
        pix_val_V_reg_707_pp0_iter3_reg <= pix_val_V_reg_707;
        ret_64_reg_2576 <= ret_64_fu_2031_p2;
        ret_65_reg_2581 <= ret_65_fu_2049_p2;
        tmp_10_reg_2586 <= ret_64_fu_2031_p2[32'd13];
        tmp_11_reg_2592 <= {{ret_64_fu_2031_p2[13:10]}};
        tmp_13_reg_2597 <= {{ret_65_fu_2049_p2[13:10]}};
        tmp_14_reg_2462_pp0_iter2_reg <= tmp_14_reg_2462_pp0_iter1_reg;
        tmp_14_reg_2462_pp0_iter3_reg <= tmp_14_reg_2462_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        cmp110_i_reg_2439_pp0_iter1_reg <= cmp110_i_reg_2439;
        icmp_ln833_reg_2415 <= icmp_ln833_fu_888_p2;
        icmp_ln833_reg_2415_pp0_iter1_reg <= icmp_ln833_reg_2415;
        icmp_ln843_reg_2424_pp0_iter1_reg <= icmp_ln843_reg_2424;
        icmp_ln966_reg_2455_pp0_iter1_reg <= icmp_ln966_reg_2455;
        tmp_14_reg_2462_pp0_iter1_reg <= tmp_14_reg_2462;
        zext_ln833_1_reg_2419_pp0_iter1_reg[10 : 0] <= zext_ln833_1_reg_2419[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln833_fu_888_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln843_fu_916_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp110_i_reg_2439 <= cmp110_i_fu_922_p2;
        lineBuffer_val_V_0_i_addr_reg_2428 <= zext_ln833_1_fu_900_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln833_fu_888_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln843_reg_2424 <= icmp_ln843_fu_916_p2;
        icmp_ln966_reg_2455 <= icmp_ln966_fu_944_p2;
        tmp_14_reg_2462 <= or_ln1004_fu_950_p2[32'd11];
        zext_ln833_1_reg_2419[10 : 0] <= zext_ln833_1_fu_900_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pixWindow_val_val_V_0_1_0_4_reg_2466 <= pixWindow_val_val_V_0_1_0_fu_206;
        pixWindow_val_val_V_0_1_1_4_reg_2471 <= pixWindow_val_val_V_0_1_1_fu_210;
        pixWindow_val_val_V_0_1_2_4_reg_2476 <= pixWindow_val_val_V_0_1_2_fu_214;
        pixWindow_val_val_V_1_0_0_2_reg_2481 <= pixWindow_val_val_V_1_0_0_fu_218;
        pixWindow_val_val_V_1_0_1_2_reg_2486 <= pixWindow_val_val_V_1_0_1_fu_222;
        pixWindow_val_val_V_1_0_2_2_reg_2491 <= pixWindow_val_val_V_1_0_2_fu_226;
        pixWindow_val_val_V_1_1_0_5_reg_2496 <= pixWindow_val_val_V_1_1_0_fu_230;
        pixWindow_val_val_V_1_1_1_5_reg_2501 <= pixWindow_val_val_V_1_1_1_fu_234;
        pixWindow_val_val_V_1_1_2_5_reg_2506 <= pixWindow_val_val_V_1_1_2_fu_238;
        pixWindow_val_val_V_2_1_0_4_reg_2511 <= pixWindow_val_val_V_2_1_0_fu_242;
        pixWindow_val_val_V_2_1_1_4_reg_2516 <= pixWindow_val_val_V_2_1_1_fu_246;
        pixWindow_val_val_V_2_1_2_4_reg_2521 <= pixWindow_val_val_V_2_1_2_fu_250;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0))) begin
        ret_33_reg_2526 <= ret_33_fu_1565_p2;
        ret_35_reg_2531 <= ret_35_fu_1593_p2;
        ret_56_reg_2536 <= ret_56_fu_1599_p2;
        ret_57_reg_2541 <= ret_57_fu_1605_p2;
        ret_58_reg_2546 <= ret_58_fu_1611_p2;
        ret_59_reg_2551 <= ret_59_fu_1617_p2;
        ret_60_reg_2556 <= ret_60_fu_1623_p2;
        ret_61_reg_2561 <= ret_61_fu_1629_p2;
        ret_62_reg_2566 <= ret_62_fu_1635_p2;
        ret_63_reg_2571 <= ret_63_fu_1641_p2;
    end
end

always @ (*) begin
    if (((icmp_ln833_fu_888_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln833_reg_2415_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_down_val_V_1_phi_fu_672_p4 = pixWindow_val_val_V_2_1_1_fu_246;
        end else if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_down_val_V_1_phi_fu_672_p4 = select_ln909_10_fu_1267_p3;
        end else begin
            ap_phi_mux_down_val_V_1_phi_fu_672_p4 = ap_phi_reg_pp0_iter2_down_val_V_1_reg_669;
        end
    end else begin
        ap_phi_mux_down_val_V_1_phi_fu_672_p4 = ap_phi_reg_pp0_iter2_down_val_V_1_reg_669;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_down_val_V_2_phi_fu_663_p4 = pixWindow_val_val_V_2_1_2_fu_250;
        end else if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_down_val_V_2_phi_fu_663_p4 = select_ln909_9_fu_1259_p3;
        end else begin
            ap_phi_mux_down_val_V_2_phi_fu_663_p4 = ap_phi_reg_pp0_iter2_down_val_V_2_reg_660;
        end
    end else begin
        ap_phi_mux_down_val_V_2_phi_fu_663_p4 = ap_phi_reg_pp0_iter2_down_val_V_2_reg_660;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_down_val_V_phi_fu_681_p4 = pixWindow_val_val_V_2_1_0_fu_242;
        end else if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_down_val_V_phi_fu_681_p4 = select_ln909_11_fu_1275_p3;
        end else begin
            ap_phi_mux_down_val_V_phi_fu_681_p4 = ap_phi_reg_pp0_iter2_down_val_V_reg_678;
        end
    end else begin
        ap_phi_mux_down_val_V_phi_fu_681_p4 = ap_phi_reg_pp0_iter2_down_val_V_reg_678;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_left_val_V_1_phi_fu_729_p4 = pixWindow_val_val_V_1_0_1_fu_222;
        end else if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_left_val_V_1_phi_fu_729_p4 = select_ln909_7_fu_1243_p3;
        end else begin
            ap_phi_mux_left_val_V_1_phi_fu_729_p4 = ap_phi_reg_pp0_iter2_left_val_V_1_reg_726;
        end
    end else begin
        ap_phi_mux_left_val_V_1_phi_fu_729_p4 = ap_phi_reg_pp0_iter2_left_val_V_1_reg_726;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_left_val_V_2_phi_fu_720_p4 = pixWindow_val_val_V_1_0_2_fu_226;
        end else if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_left_val_V_2_phi_fu_720_p4 = select_ln909_6_fu_1235_p3;
        end else begin
            ap_phi_mux_left_val_V_2_phi_fu_720_p4 = ap_phi_reg_pp0_iter2_left_val_V_2_reg_717;
        end
    end else begin
        ap_phi_mux_left_val_V_2_phi_fu_720_p4 = ap_phi_reg_pp0_iter2_left_val_V_2_reg_717;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_left_val_V_phi_fu_738_p4 = pixWindow_val_val_V_1_0_0_fu_218;
        end else if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_left_val_V_phi_fu_738_p4 = select_ln909_8_fu_1251_p3;
        end else begin
            ap_phi_mux_left_val_V_phi_fu_738_p4 = ap_phi_reg_pp0_iter2_left_val_V_reg_735;
        end
    end else begin
        ap_phi_mux_left_val_V_phi_fu_738_p4 = ap_phi_reg_pp0_iter2_left_val_V_reg_735;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_pix_val_V_7_phi_fu_700_p4 = pixWindow_val_val_V_1_1_1_fu_234;
        end else if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_pix_val_V_7_phi_fu_700_p4 = select_ln909_4_fu_1219_p3;
        end else begin
            ap_phi_mux_pix_val_V_7_phi_fu_700_p4 = ap_phi_reg_pp0_iter2_pix_val_V_7_reg_697;
        end
    end else begin
        ap_phi_mux_pix_val_V_7_phi_fu_700_p4 = ap_phi_reg_pp0_iter2_pix_val_V_7_reg_697;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_pix_val_V_8_phi_fu_690_p4 = pixWindow_val_val_V_1_1_2_fu_238;
        end else if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_pix_val_V_8_phi_fu_690_p4 = select_ln909_3_fu_1211_p3;
        end else begin
            ap_phi_mux_pix_val_V_8_phi_fu_690_p4 = ap_phi_reg_pp0_iter2_pix_val_V_8_reg_687;
        end
    end else begin
        ap_phi_mux_pix_val_V_8_phi_fu_690_p4 = ap_phi_reg_pp0_iter2_pix_val_V_8_reg_687;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_pix_val_V_phi_fu_710_p4 = pixWindow_val_val_V_1_1_0_fu_230;
        end else if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_pix_val_V_phi_fu_710_p4 = select_ln909_5_fu_1227_p3;
        end else begin
            ap_phi_mux_pix_val_V_phi_fu_710_p4 = ap_phi_reg_pp0_iter2_pix_val_V_reg_707;
        end
    end else begin
        ap_phi_mux_pix_val_V_phi_fu_710_p4 = ap_phi_reg_pp0_iter2_pix_val_V_reg_707;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_up_val_V_1_phi_fu_756_p4 = pixWindow_val_val_V_0_1_1_fu_210;
        end else if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_up_val_V_1_phi_fu_756_p4 = select_ln909_1_fu_1195_p3;
        end else begin
            ap_phi_mux_up_val_V_1_phi_fu_756_p4 = ap_phi_reg_pp0_iter2_up_val_V_1_reg_753;
        end
    end else begin
        ap_phi_mux_up_val_V_1_phi_fu_756_p4 = ap_phi_reg_pp0_iter2_up_val_V_1_reg_753;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_up_val_V_2_phi_fu_747_p4 = pixWindow_val_val_V_0_1_2_fu_214;
        end else if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_up_val_V_2_phi_fu_747_p4 = select_ln909_fu_1187_p3;
        end else begin
            ap_phi_mux_up_val_V_2_phi_fu_747_p4 = ap_phi_reg_pp0_iter2_up_val_V_2_reg_744;
        end
    end else begin
        ap_phi_mux_up_val_V_2_phi_fu_747_p4 = ap_phi_reg_pp0_iter2_up_val_V_2_reg_744;
    end
end

always @ (*) begin
    if ((icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_up_val_V_phi_fu_765_p4 = pixWindow_val_val_V_0_1_0_fu_206;
        end else if ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_up_val_V_phi_fu_765_p4 = select_ln909_2_fu_1203_p3;
        end else begin
            ap_phi_mux_up_val_V_phi_fu_765_p4 = ap_phi_reg_pp0_iter2_up_val_V_reg_762;
        end
    end else begin
        ap_phi_mux_up_val_V_phi_fu_765_p4 = ap_phi_reg_pp0_iter2_up_val_V_reg_762;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_z = 11'd0;
    end else begin
        ap_sig_allocacmp_z = x_fu_202;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op127_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imgRB_blk_n = imgRB_empty_n;
    end else begin
        imgRB_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op127_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imgRB_read = 1'b1;
    end else begin
        imgRB_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (tmp_14_reg_2462_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        imgRgb_blk_n = imgRgb_full_n;
    end else begin
        imgRgb_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_14_reg_2462_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        imgRgb_write = 1'b1;
    end else begin
        imgRgb_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lineBuffer_val_V_0_i_ce0 = 1'b1;
    end else begin
        lineBuffer_val_V_0_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lineBuffer_val_V_0_i_ce1 = 1'b1;
    end else begin
        lineBuffer_val_V_0_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (cmp37_i == 1'd1) & (icmp_ln843_reg_2424 == 1'd1) & (icmp_ln833_reg_2415 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lineBuffer_val_V_0_i_we0 = 1'b1;
    end else begin
        lineBuffer_val_V_0_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        lineBuffer_val_V_1_i_ce0 = 1'b1;
    end else begin
        lineBuffer_val_V_1_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lineBuffer_val_V_1_i_ce1 = 1'b1;
    end else begin
        lineBuffer_val_V_1_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1) & (icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        lineBuffer_val_V_1_i_we0 = 1'b1;
    end else begin
        lineBuffer_val_V_1_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixBuf_val_V_0_0_1_i_out_ap_vld = 1'b1;
    end else begin
        pixBuf_val_V_0_0_1_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixBuf_val_V_0_1_1_i_out_ap_vld = 1'b1;
    end else begin
        pixBuf_val_V_0_1_1_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixBuf_val_V_0_2_1_i_out_ap_vld = 1'b1;
    end else begin
        pixBuf_val_V_0_2_1_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixBuf_val_V_1_0_1_i_out_ap_vld = 1'b1;
    end else begin
        pixBuf_val_V_1_0_1_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixBuf_val_V_1_1_1_i_out_ap_vld = 1'b1;
    end else begin
        pixBuf_val_V_1_1_1_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixBuf_val_V_1_2_1_i_out_ap_vld = 1'b1;
    end else begin
        pixBuf_val_V_1_2_1_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixBuf_val_V_2_0_1_i_out_ap_vld = 1'b1;
    end else begin
        pixBuf_val_V_2_0_1_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixBuf_val_V_2_1_1_i_out_ap_vld = 1'b1;
    end else begin
        pixBuf_val_V_2_1_1_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixBuf_val_V_2_2_1_i_out_ap_vld = 1'b1;
    end else begin
        pixBuf_val_V_2_2_1_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixWindow_val_val_V_0_1_0_2_i_out_ap_vld = 1'b1;
    end else begin
        pixWindow_val_val_V_0_1_0_2_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixWindow_val_val_V_0_1_1_2_i_out_ap_vld = 1'b1;
    end else begin
        pixWindow_val_val_V_0_1_1_2_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixWindow_val_val_V_0_1_2_2_i_out_ap_vld = 1'b1;
    end else begin
        pixWindow_val_val_V_0_1_2_2_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixWindow_val_val_V_1_0_0_i_out_ap_vld = 1'b1;
    end else begin
        pixWindow_val_val_V_1_0_0_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixWindow_val_val_V_1_0_1_i_out_ap_vld = 1'b1;
    end else begin
        pixWindow_val_val_V_1_0_1_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixWindow_val_val_V_1_0_2_i_out_ap_vld = 1'b1;
    end else begin
        pixWindow_val_val_V_1_0_2_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixWindow_val_val_V_1_1_0_i_out_ap_vld = 1'b1;
    end else begin
        pixWindow_val_val_V_1_1_0_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixWindow_val_val_V_1_1_1_i_out_ap_vld = 1'b1;
    end else begin
        pixWindow_val_val_V_1_1_1_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixWindow_val_val_V_1_1_2_i_out_ap_vld = 1'b1;
    end else begin
        pixWindow_val_val_V_1_1_2_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixWindow_val_val_V_2_1_0_2_i_out_ap_vld = 1'b1;
    end else begin
        pixWindow_val_val_V_2_1_0_2_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixWindow_val_val_V_2_1_1_2_i_out_ap_vld = 1'b1;
    end else begin
        pixWindow_val_val_V_2_1_1_2_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln833_reg_2415_pp0_iter2_reg == 1'd1))) begin
        pixWindow_val_val_V_2_1_2_2_i_out_ap_vld = 1'b1;
    end else begin
        pixWindow_val_val_V_2_1_2_2_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DBh_V_fu_1497_p3 = ((abscond35_i_fu_1491_p2[0:0] == 1'b1) ? empty_164_fu_1481_p1 : neg34_i_fu_1485_p2);

assign DBv_V_fu_1535_p3 = ((abscond38_i_fu_1529_p2[0:0] == 1'b1) ? empty_165_fu_1519_p1 : neg37_i_fu_1523_p2);

assign DGh_fu_1421_p3 = ((abscond29_i_fu_1415_p2[0:0] == 1'b1) ? empty_162_fu_1405_p1 : neg28_i_fu_1409_p2);

assign DGv_V_fu_1459_p3 = ((abscond32_i_fu_1453_p2[0:0] == 1'b1) ? empty_163_fu_1443_p1 : neg31_i_fu_1447_p2);

assign DRh_fu_1345_p3 = ((abscond_i_fu_1339_p2[0:0] == 1'b1) ? empty_160_fu_1329_p1 : neg_i_fu_1333_p2);

assign DRv_V_fu_1383_p3 = ((abscond26_i_fu_1377_p2[0:0] == 1'b1) ? empty_161_fu_1367_p1 : neg25_i_fu_1371_p2);

assign abscond26_i_fu_1377_p2 = (($signed(ret_27_fu_1361_p2) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign abscond29_i_fu_1415_p2 = (($signed(ret_28_fu_1399_p2) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign abscond32_i_fu_1453_p2 = (($signed(ret_29_fu_1437_p2) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign abscond35_i_fu_1491_p2 = (($signed(ret_30_fu_1475_p2) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign abscond38_i_fu_1529_p2 = (($signed(ret_31_fu_1513_p2) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign abscond_i_fu_1339_p2 = (($signed(ret_fu_1323_p2) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign and_ln995_fu_2096_p2 = (xor_ln966_2_fu_2091_p2 & tmp_12_fu_2073_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_14_reg_2462_pp0_iter3_reg == 1'd0) & (imgRgb_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_predicate_op127_read_state2 == 1'b1) & (imgRB_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_14_reg_2462_pp0_iter3_reg == 1'd0) & (imgRgb_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_predicate_op127_read_state2 == 1'b1) & (imgRB_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_14_reg_2462_pp0_iter3_reg == 1'd0) & (imgRgb_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_predicate_op127_read_state2 == 1'b1) & (imgRB_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op127_read_state2 == 1'b1) & (imgRB_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((tmp_14_reg_2462_pp0_iter3_reg == 1'd0) & (imgRgb_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_1378 = ((icmp_ln843_reg_2424 == 1'd1) & (icmp_ln833_reg_2415 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_1382 = ((cmp37_i_read_reg_2411 == 1'd0) & (icmp_ln843_reg_2424 == 1'd1) & (icmp_ln833_reg_2415 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_1386 = ((cmp37_i == 1'd1) & (icmp_ln843_reg_2424 == 1'd1) & (icmp_ln833_reg_2415 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_enable_operation_109 = (ap_predicate_op109_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_113 = (ap_predicate_op113_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_132 = (ap_predicate_op132_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_177 = (ap_predicate_op177_store_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_96 = (ap_predicate_op96_load_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_98 = (ap_predicate_op98_load_state1 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state1_pp0_iter0_stage0 = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter2_down_val_V_1_reg_669 = 'bx;

assign ap_phi_reg_pp0_iter2_down_val_V_2_reg_660 = 'bx;

assign ap_phi_reg_pp0_iter2_down_val_V_reg_678 = 'bx;

assign ap_phi_reg_pp0_iter2_left_val_V_1_reg_726 = 'bx;

assign ap_phi_reg_pp0_iter2_left_val_V_2_reg_717 = 'bx;

assign ap_phi_reg_pp0_iter2_left_val_V_reg_735 = 'bx;

assign ap_phi_reg_pp0_iter2_pix_val_V_7_reg_697 = 'bx;

assign ap_phi_reg_pp0_iter2_pix_val_V_8_reg_687 = 'bx;

assign ap_phi_reg_pp0_iter2_pix_val_V_reg_707 = 'bx;

assign ap_phi_reg_pp0_iter2_up_val_V_1_reg_753 = 'bx;

assign ap_phi_reg_pp0_iter2_up_val_V_2_reg_744 = 'bx;

assign ap_phi_reg_pp0_iter2_up_val_V_reg_762 = 'bx;

always @ (*) begin
    ap_predicate_op109_load_state2 = ((icmp_ln843_reg_2424 == 1'd1) & (icmp_ln833_reg_2415 == 1'd0));
end

always @ (*) begin
    ap_predicate_op113_load_state2 = ((icmp_ln843_reg_2424 == 1'd1) & (icmp_ln833_reg_2415 == 1'd0));
end

always @ (*) begin
    ap_predicate_op127_read_state2 = ((cmp37_i == 1'd1) & (icmp_ln843_reg_2424 == 1'd1) & (icmp_ln833_reg_2415 == 1'd0));
end

always @ (*) begin
    ap_predicate_op132_store_state2 = ((cmp37_i == 1'd1) & (icmp_ln843_reg_2424 == 1'd1) & (icmp_ln833_reg_2415 == 1'd0));
end

always @ (*) begin
    ap_predicate_op177_store_state3 = ((icmp_ln843_reg_2424_pp0_iter1_reg == 1'd1) & (icmp_ln833_reg_2415_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op96_load_state1 = ((icmp_ln833_fu_888_p2 == 1'd0) & (icmp_ln843_fu_916_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op98_load_state1 = ((icmp_ln833_fu_888_p2 == 1'd0) & (icmp_ln843_fu_916_p2 == 1'd1));
end

assign b_3_fu_2177_p3 = ((or_ln995_fu_2165_p2[0:0] == 1'b1) ? select_ln995_fu_2158_p3 : select_ln995_1_fu_2169_p3);

assign cmp110_i_fu_922_p2 = ((ap_sig_allocacmp_z == 11'd0) ? 1'b1 : 1'b0);

assign cmp37_i_read_reg_2411 = cmp37_i;

assign empty_160_fu_1329_p1 = ret_fu_1323_p2[9:0];

assign empty_161_fu_1367_p1 = ret_27_fu_1361_p2[9:0];

assign empty_162_fu_1405_p1 = ret_28_fu_1399_p2[9:0];

assign empty_163_fu_1443_p1 = ret_29_fu_1437_p2[9:0];

assign empty_164_fu_1481_p1 = ret_30_fu_1475_p2[9:0];

assign empty_165_fu_1519_p1 = ret_31_fu_1513_p2[9:0];

assign icmp_ln1057_fu_1707_p2 = ((ret_33_reg_2526 < ret_35_reg_2531) ? 1'b1 : 1'b0);

assign icmp_ln833_fu_888_p2 = ((ap_sig_allocacmp_z == add_ln830_i) ? 1'b1 : 1'b0);

assign icmp_ln843_fu_916_p2 = ((ap_sig_allocacmp_z < width_cast) ? 1'b1 : 1'b0);

assign icmp_ln966_fu_944_p2 = ((xor_i == zext_ln966_fu_940_p1) ? 1'b1 : 1'b0);

assign icmp_ln994_fu_2108_p2 = (($signed(tmp_11_reg_2592) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp_ln995_fu_2139_p2 = (($signed(tmp_13_reg_2597) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign imgRgb_din = {{{{{{{{{{6'd0}, {r_5_fu_2151_p3}}}, {6'd0}}}, {b_3_fu_2177_p3}}}, {6'd0}}}, {pix_val_V_7_reg_697_pp0_iter3_reg}};

assign lineBuffer_val_V_0_i_address0 = lineBuffer_val_V_0_i_addr_reg_2428;

assign lineBuffer_val_V_0_i_address1 = zext_ln833_1_fu_900_p1;

assign lineBuffer_val_V_0_i_d0 = {{{pixBuf_val_V_0_2_fu_1076_p4}, {pixBuf_val_V_0_1_fu_1066_p4}}, {pixBuf_val_V_0_0_fu_1062_p1}};

assign lineBuffer_val_V_1_i_address0 = zext_ln833_1_reg_2419_pp0_iter1_reg;

assign lineBuffer_val_V_1_i_address1 = zext_ln833_1_fu_900_p1;

assign lineBuffer_val_V_1_i_d0 = {{{select_ln927_2_fu_1297_p3}, {select_ln927_1_fu_1290_p3}}, {select_ln927_fu_1283_p3}};

assign neg25_i_fu_1371_p2 = (10'd0 - empty_161_fu_1367_p1);

assign neg28_i_fu_1409_p2 = (10'd0 - empty_162_fu_1405_p1);

assign neg31_i_fu_1447_p2 = (10'd0 - empty_163_fu_1443_p1);

assign neg34_i_fu_1485_p2 = (10'd0 - empty_164_fu_1481_p1);

assign neg37_i_fu_1523_p2 = (10'd0 - empty_165_fu_1519_p1);

assign neg_i_fu_1333_p2 = (10'd0 - empty_160_fu_1329_p1);

assign or_ln1004_fu_950_p2 = (out_y_i | out_x_fu_910_p2);

assign or_ln994_fu_2126_p2 = (tmp_10_reg_2586 | icmp_ln994_fu_2108_p2);

assign or_ln995_fu_2165_p2 = (icmp_ln966_reg_2455_pp0_iter3_reg | and_ln995_reg_2602);

assign out_x_fu_910_p2 = ($signed(zext_ln833_fu_884_p1) + $signed(12'd4095));

assign pixBuf_val_V_0_0_1_i_out = pixWindow_val_val_V_2_2_0_fu_254;

assign pixBuf_val_V_0_0_2_fu_969_p1 = lineBuffer_val_V_0_i_q1[9:0];

assign pixBuf_val_V_0_0_fu_1062_p1 = imgRB_dout[9:0];

assign pixBuf_val_V_0_1_1_i_out = pixWindow_val_val_V_2_2_1_fu_258;

assign pixBuf_val_V_0_1_fu_1066_p4 = {{imgRB_dout[25:16]}};

assign pixBuf_val_V_0_2_1_i_out = pixWindow_val_val_V_2_2_2_fu_262;

assign pixBuf_val_V_0_2_fu_1076_p4 = {{imgRB_dout[41:32]}};

assign pixBuf_val_V_1_0_1_i_out = pixWindow_val_val_V_1_2_0_fu_266;

assign pixBuf_val_V_1_1_1_i_out = pixWindow_val_val_V_1_2_1_fu_270;

assign pixBuf_val_V_1_2_1_i_out = pixWindow_val_val_V_1_2_2_fu_274;

assign pixBuf_val_V_2_0_1_i_out = pixWindow_val_val_V_0_2_0_fu_278;

assign pixBuf_val_V_2_0_fu_993_p1 = lineBuffer_val_V_1_i_q1[9:0];

assign pixBuf_val_V_2_1_1_i_out = pixWindow_val_val_V_0_2_1_fu_282;

assign pixBuf_val_V_2_2_1_i_out = pixWindow_val_val_V_0_2_2_fu_286;

assign pixWindow_val_val_V_0_1_0_2_i_out = pixWindow_val_val_V_0_1_0_4_reg_2466;

assign pixWindow_val_val_V_0_1_1_2_i_out = pixWindow_val_val_V_0_1_1_4_reg_2471;

assign pixWindow_val_val_V_0_1_2_2_i_out = pixWindow_val_val_V_0_1_2_4_reg_2476;

assign pixWindow_val_val_V_1_0_0_i_out = pixWindow_val_val_V_1_0_0_2_reg_2481;

assign pixWindow_val_val_V_1_0_1_i_out = pixWindow_val_val_V_1_0_1_2_reg_2486;

assign pixWindow_val_val_V_1_0_2_i_out = pixWindow_val_val_V_1_0_2_2_reg_2491;

assign pixWindow_val_val_V_1_1_0_i_out = pixWindow_val_val_V_1_1_0_5_reg_2496;

assign pixWindow_val_val_V_1_1_1_i_out = pixWindow_val_val_V_1_1_1_5_reg_2501;

assign pixWindow_val_val_V_1_1_2_i_out = pixWindow_val_val_V_1_1_2_5_reg_2506;

assign pixWindow_val_val_V_2_1_0_2_i_out = pixWindow_val_val_V_2_1_0_4_reg_2511;

assign pixWindow_val_val_V_2_1_1_2_i_out = pixWindow_val_val_V_2_1_1_4_reg_2516;

assign pixWindow_val_val_V_2_1_2_2_i_out = pixWindow_val_val_V_2_1_2_4_reg_2521;

assign r_3_fu_2131_p3 = ((or_ln994_fu_2126_p2[0:0] == 1'b1) ? select_ln994_fu_2118_p3 : trunc_ln960_1_fu_2105_p1);

assign r_4_fu_2144_p3 = ((icmp_ln966_reg_2455_pp0_iter3_reg[0:0] == 1'b1) ? pix_val_V_reg_707_pp0_iter3_reg : r_3_fu_2131_p3);

assign r_5_fu_2151_p3 = ((and_ln995_reg_2602[0:0] == 1'b1) ? r_3_fu_2131_p3 : r_4_fu_2144_p3);

assign ret_27_fu_1361_p2 = (zext_ln1526_11_fu_1353_p1 - zext_ln1526_12_fu_1357_p1);

assign ret_28_fu_1399_p2 = (zext_ln1526_13_fu_1391_p1 - zext_ln1526_14_fu_1395_p1);

assign ret_29_fu_1437_p2 = (zext_ln1526_15_fu_1429_p1 - zext_ln1526_16_fu_1433_p1);

assign ret_30_fu_1475_p2 = (zext_ln1526_17_fu_1467_p1 - zext_ln1526_18_fu_1471_p1);

assign ret_31_fu_1513_p2 = (zext_ln1526_19_fu_1505_p1 - zext_ln1526_20_fu_1509_p1);

assign ret_33_fu_1565_p2 = (zext_ln225_2_fu_1557_p1 + zext_ln225_3_fu_1561_p1);

assign ret_35_fu_1593_p2 = (zext_ln225_6_fu_1585_p1 + zext_ln225_7_fu_1589_p1);

assign ret_38_fu_1717_p2 = ($signed(sext_ln225_1_fu_1714_p1) + $signed(sext_ln225_fu_1711_p1));

assign ret_39_fu_1779_p3 = ((tmp_fu_1723_p3[0:0] == 1'b1) ? sub_ln1543_2_fu_1755_p2 : zext_ln1543_1_fu_1775_p1);

assign ret_42_fu_1797_p2 = ($signed(sext_ln225_3_fu_1794_p1) + $signed(sext_ln225_2_fu_1791_p1));

assign ret_43_fu_1859_p3 = ((tmp_7_fu_1803_p3[0:0] == 1'b1) ? sub_ln1543_4_fu_1835_p2 : zext_ln1543_3_fu_1855_p1);

assign ret_46_fu_1873_p2 = ($signed(sext_ln225_5_fu_1870_p1) + $signed(sext_ln225_4_fu_1867_p1));

assign ret_47_fu_1935_p3 = ((tmp_8_fu_1879_p3[0:0] == 1'b1) ? sub_ln1543_6_fu_1911_p2 : zext_ln1543_5_fu_1931_p1);

assign ret_50_fu_1949_p2 = ($signed(sext_ln225_7_fu_1946_p1) + $signed(sext_ln225_6_fu_1943_p1));

assign ret_51_fu_2011_p3 = ((tmp_9_fu_1955_p3[0:0] == 1'b1) ? sub_ln1543_8_fu_1987_p2 : zext_ln1543_7_fu_2007_p1);

assign ret_54_fu_1551_p2 = (zext_ln225_1_fu_1547_p1 + zext_ln225_fu_1543_p1);

assign ret_55_fu_1579_p2 = (zext_ln225_5_fu_1575_p1 + zext_ln225_4_fu_1571_p1);

assign ret_56_fu_1599_p2 = (zext_ln1526_13_fu_1391_p1 - zext_ln1526_fu_1315_p1);

assign ret_57_fu_1605_p2 = (zext_ln1526_14_fu_1395_p1 - zext_ln1526_10_fu_1319_p1);

assign ret_58_fu_1611_p2 = (zext_ln1526_13_fu_1391_p1 - zext_ln1526_17_fu_1467_p1);

assign ret_59_fu_1617_p2 = (zext_ln1526_14_fu_1395_p1 - zext_ln1526_18_fu_1471_p1);

assign ret_60_fu_1623_p2 = (zext_ln1526_15_fu_1429_p1 - zext_ln1526_11_fu_1353_p1);

assign ret_61_fu_1629_p2 = (zext_ln1526_16_fu_1433_p1 - zext_ln1526_12_fu_1357_p1);

assign ret_62_fu_1635_p2 = (zext_ln1526_15_fu_1429_p1 - zext_ln1526_19_fu_1505_p1);

assign ret_63_fu_1641_p2 = (zext_ln1526_16_fu_1433_p1 - zext_ln1526_20_fu_1509_p1);

assign ret_64_fu_2031_p2 = ($signed(zext_ln1526_21_fu_1787_p1) - $signed(sext_ln1057_fu_2027_p1));

assign ret_65_fu_2049_p2 = ($signed(zext_ln1526_21_fu_1787_p1) - $signed(sext_ln1057_1_fu_2045_p1));

assign ret_fu_1323_p2 = (zext_ln1526_fu_1315_p1 - zext_ln1526_10_fu_1319_p1);

assign select_ln1057_1_fu_2037_p3 = ((icmp_ln1057_fu_1707_p2[0:0] == 1'b1) ? ret_43_fu_1859_p3 : ret_51_fu_2011_p3);

assign select_ln1057_fu_2019_p3 = ((icmp_ln1057_fu_1707_p2[0:0] == 1'b1) ? ret_39_fu_1779_p3 : ret_47_fu_1935_p3);

assign select_ln909_10_fu_1267_p3 = ((cmp110_i_reg_2439_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_2_2_1_fu_258 : pixWindow_val_val_V_2_1_1_fu_246);

assign select_ln909_11_fu_1275_p3 = ((cmp110_i_reg_2439_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_2_2_0_fu_254 : pixWindow_val_val_V_2_1_0_fu_242);

assign select_ln909_1_fu_1195_p3 = ((cmp110_i_reg_2439_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_0_2_1_fu_282 : pixWindow_val_val_V_0_1_1_fu_210);

assign select_ln909_2_fu_1203_p3 = ((cmp110_i_reg_2439_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_0_2_0_fu_278 : pixWindow_val_val_V_0_1_0_fu_206);

assign select_ln909_3_fu_1211_p3 = ((cmp110_i_reg_2439_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_2_fu_274 : pixWindow_val_val_V_1_1_2_fu_238);

assign select_ln909_4_fu_1219_p3 = ((cmp110_i_reg_2439_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_1_fu_270 : pixWindow_val_val_V_1_1_1_fu_234);

assign select_ln909_5_fu_1227_p3 = ((cmp110_i_reg_2439_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_0_fu_266 : pixWindow_val_val_V_1_1_0_fu_230);

assign select_ln909_6_fu_1235_p3 = ((cmp110_i_reg_2439_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_2_fu_274 : pixWindow_val_val_V_1_0_2_fu_226);

assign select_ln909_7_fu_1243_p3 = ((cmp110_i_reg_2439_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_1_fu_270 : pixWindow_val_val_V_1_0_1_fu_222);

assign select_ln909_8_fu_1251_p3 = ((cmp110_i_reg_2439_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_0_fu_266 : pixWindow_val_val_V_1_0_0_fu_218);

assign select_ln909_9_fu_1259_p3 = ((cmp110_i_reg_2439_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_2_2_2_fu_262 : pixWindow_val_val_V_2_1_2_fu_250);

assign select_ln909_fu_1187_p3 = ((cmp110_i_reg_2439_pp0_iter1_reg[0:0] == 1'b1) ? pixWindow_val_val_V_0_2_2_fu_286 : pixWindow_val_val_V_0_1_2_fu_214);

assign select_ln927_1_fu_1290_p3 = ((cmp140_i[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_1_fu_270 : pixWindow_val_val_V_2_2_1_fu_258);

assign select_ln927_2_fu_1297_p3 = ((cmp140_i[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_2_fu_274 : pixWindow_val_val_V_2_2_2_fu_262);

assign select_ln927_fu_1283_p3 = ((cmp140_i[0:0] == 1'b1) ? pixWindow_val_val_V_1_2_0_fu_266 : pixWindow_val_val_V_2_2_0_fu_254);

assign select_ln994_fu_2118_p3 = ((xor_ln994_fu_2113_p2[0:0] == 1'b1) ? 10'd1023 : 10'd0);

assign select_ln995_1_fu_2169_p3 = ((icmp_ln995_fu_2139_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln960_fu_2102_p1);

assign select_ln995_fu_2158_p3 = ((and_ln995_reg_2602[0:0] == 1'b1) ? 10'd0 : pix_val_V_8_reg_687_pp0_iter3_reg);

assign sext_ln1057_1_fu_2045_p1 = $signed(select_ln1057_1_fu_2037_p3);

assign sext_ln1057_fu_2027_p1 = $signed(select_ln1057_fu_2019_p3);

assign sext_ln1543_1_fu_1771_p1 = $signed(trunc_ln1543_3_i_fu_1761_p4);

assign sext_ln1543_2_fu_1827_p1 = $signed(trunc_ln1543_1_i_fu_1817_p4);

assign sext_ln1543_3_fu_1851_p1 = $signed(trunc_ln1543_5_i_fu_1841_p4);

assign sext_ln1543_4_fu_1903_p1 = $signed(trunc_ln1543_2_i_fu_1893_p4);

assign sext_ln1543_5_fu_1927_p1 = $signed(trunc_ln1543_7_i_fu_1917_p4);

assign sext_ln1543_6_fu_1979_p1 = $signed(trunc_ln1543_10_i_fu_1969_p4);

assign sext_ln1543_7_fu_2003_p1 = $signed(trunc_ln1543_9_i_fu_1993_p4);

assign sext_ln1543_fu_1747_p1 = $signed(trunc_ln1543_i_fu_1737_p4);

assign sext_ln225_1_fu_1714_p1 = $signed(ret_57_reg_2541);

assign sext_ln225_2_fu_1791_p1 = $signed(ret_58_reg_2546);

assign sext_ln225_3_fu_1794_p1 = $signed(ret_59_reg_2551);

assign sext_ln225_4_fu_1867_p1 = $signed(ret_60_reg_2556);

assign sext_ln225_5_fu_1870_p1 = $signed(ret_61_reg_2561);

assign sext_ln225_6_fu_1943_p1 = $signed(ret_62_reg_2566);

assign sext_ln225_7_fu_1946_p1 = $signed(ret_63_reg_2571);

assign sext_ln225_fu_1711_p1 = $signed(ret_56_reg_2536);

assign sub_ln1543_2_fu_1755_p2 = (13'd0 - zext_ln1543_fu_1751_p1);

assign sub_ln1543_3_fu_1811_p2 = (12'd0 - ret_42_fu_1797_p2);

assign sub_ln1543_4_fu_1835_p2 = (13'd0 - zext_ln1543_2_fu_1831_p1);

assign sub_ln1543_5_fu_1887_p2 = (12'd0 - ret_46_fu_1873_p2);

assign sub_ln1543_6_fu_1911_p2 = (13'd0 - zext_ln1543_4_fu_1907_p1);

assign sub_ln1543_7_fu_1963_p2 = (12'd0 - ret_50_fu_1949_p2);

assign sub_ln1543_8_fu_1987_p2 = (13'd0 - zext_ln1543_6_fu_1983_p1);

assign sub_ln1543_fu_1731_p2 = (12'd0 - ret_38_fu_1717_p2);

assign tmp_12_fu_2073_p3 = ret_65_fu_2049_p2[32'd13];

assign tmp_7_fu_1803_p3 = ret_42_fu_1797_p2[32'd11];

assign tmp_8_fu_1879_p3 = ret_46_fu_1873_p2[32'd11];

assign tmp_9_fu_1955_p3 = ret_50_fu_1949_p2[32'd11];

assign tmp_fu_1723_p3 = ret_38_fu_1717_p2[32'd11];

assign trunc_ln1543_10_i_fu_1969_p4 = {{sub_ln1543_7_fu_1963_p2[11:1]}};

assign trunc_ln1543_1_i_fu_1817_p4 = {{sub_ln1543_3_fu_1811_p2[11:1]}};

assign trunc_ln1543_2_i_fu_1893_p4 = {{sub_ln1543_5_fu_1887_p2[11:1]}};

assign trunc_ln1543_3_i_fu_1761_p4 = {{ret_38_fu_1717_p2[11:1]}};

assign trunc_ln1543_5_i_fu_1841_p4 = {{ret_42_fu_1797_p2[11:1]}};

assign trunc_ln1543_7_i_fu_1917_p4 = {{ret_46_fu_1873_p2[11:1]}};

assign trunc_ln1543_9_i_fu_1993_p4 = {{ret_50_fu_1949_p2[11:1]}};

assign trunc_ln1543_i_fu_1737_p4 = {{sub_ln1543_fu_1731_p2[11:1]}};

assign trunc_ln841_fu_906_p1 = ap_sig_allocacmp_z[0:0];

assign trunc_ln960_1_fu_2105_p1 = ret_64_reg_2576[9:0];

assign trunc_ln960_fu_2102_p1 = ret_65_reg_2581[9:0];

assign x_8_fu_894_p2 = (ap_sig_allocacmp_z + 11'd1);

assign xor_ln966_1_fu_934_p2 = (xor_ln966_fu_928_p2 ^ 1'd1);

assign xor_ln966_2_fu_2091_p2 = (icmp_ln966_reg_2455_pp0_iter2_reg ^ 1'd1);

assign xor_ln966_fu_928_p2 = (x_phase_i ^ trunc_ln841_fu_906_p1);

assign xor_ln994_fu_2113_p2 = (tmp_10_reg_2586 ^ 1'd1);

assign zext_ln1526_10_fu_1319_p1 = pixWindow_val_val_V_1_2_0_fu_266;

assign zext_ln1526_11_fu_1353_p1 = ap_phi_mux_up_val_V_phi_fu_765_p4;

assign zext_ln1526_12_fu_1357_p1 = ap_phi_mux_down_val_V_phi_fu_681_p4;

assign zext_ln1526_13_fu_1391_p1 = ap_phi_mux_left_val_V_1_phi_fu_729_p4;

assign zext_ln1526_14_fu_1395_p1 = pixWindow_val_val_V_1_2_1_fu_270;

assign zext_ln1526_15_fu_1429_p1 = ap_phi_mux_up_val_V_1_phi_fu_756_p4;

assign zext_ln1526_16_fu_1433_p1 = ap_phi_mux_down_val_V_1_phi_fu_672_p4;

assign zext_ln1526_17_fu_1467_p1 = ap_phi_mux_left_val_V_2_phi_fu_720_p4;

assign zext_ln1526_18_fu_1471_p1 = pixWindow_val_val_V_1_2_2_fu_274;

assign zext_ln1526_19_fu_1505_p1 = ap_phi_mux_up_val_V_2_phi_fu_747_p4;

assign zext_ln1526_20_fu_1509_p1 = ap_phi_mux_down_val_V_2_phi_fu_663_p4;

assign zext_ln1526_21_fu_1787_p1 = pix_val_V_7_reg_697;

assign zext_ln1526_fu_1315_p1 = ap_phi_mux_left_val_V_phi_fu_738_p4;

assign zext_ln1543_1_fu_1775_p1 = $unsigned(sext_ln1543_1_fu_1771_p1);

assign zext_ln1543_2_fu_1831_p1 = $unsigned(sext_ln1543_2_fu_1827_p1);

assign zext_ln1543_3_fu_1855_p1 = $unsigned(sext_ln1543_3_fu_1851_p1);

assign zext_ln1543_4_fu_1907_p1 = $unsigned(sext_ln1543_4_fu_1903_p1);

assign zext_ln1543_5_fu_1931_p1 = $unsigned(sext_ln1543_5_fu_1927_p1);

assign zext_ln1543_6_fu_1983_p1 = $unsigned(sext_ln1543_6_fu_1979_p1);

assign zext_ln1543_7_fu_2007_p1 = $unsigned(sext_ln1543_7_fu_2003_p1);

assign zext_ln1543_fu_1751_p1 = $unsigned(sext_ln1543_fu_1747_p1);

assign zext_ln225_1_fu_1547_p1 = DGh_fu_1421_p3;

assign zext_ln225_2_fu_1557_p1 = ret_54_fu_1551_p2;

assign zext_ln225_3_fu_1561_p1 = DBh_V_fu_1497_p3;

assign zext_ln225_4_fu_1571_p1 = DRv_V_fu_1383_p3;

assign zext_ln225_5_fu_1575_p1 = DGv_V_fu_1459_p3;

assign zext_ln225_6_fu_1585_p1 = ret_55_fu_1579_p2;

assign zext_ln225_7_fu_1589_p1 = DBv_V_fu_1535_p3;

assign zext_ln225_fu_1543_p1 = DRh_fu_1345_p3;

assign zext_ln833_1_fu_900_p1 = x_8_fu_894_p2;

assign zext_ln833_fu_884_p1 = ap_sig_allocacmp_z;

assign zext_ln966_fu_940_p1 = xor_ln966_1_fu_934_p2;

always @ (posedge ap_clk) begin
    zext_ln833_1_reg_2419[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln833_1_reg_2419_pp0_iter1_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //system_v_demosaic_0_1_DebayerRandBatG_Pipeline_VITIS_LOOP_833_2
