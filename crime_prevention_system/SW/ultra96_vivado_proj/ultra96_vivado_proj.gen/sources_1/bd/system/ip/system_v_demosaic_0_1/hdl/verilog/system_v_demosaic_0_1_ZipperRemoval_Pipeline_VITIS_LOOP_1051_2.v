// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module system_v_demosaic_0_1_ZipperRemoval_Pipeline_VITIS_LOOP_1051_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgRgb_dout,
        imgRgb_empty_n,
        imgRgb_read,
        imgUnzip_din,
        imgUnzip_full_n,
        imgUnzip_write,
        b_V_1_059,
        b_V_0_0,
        g_V_1_058,
        g_V_0_0,
        r_V_1_057,
        r_V_0_0,
        luma_V_1_056,
        luma_V_0_0,
        arrayidx5717348_load_0378,
        arrayidx5116347_load_0374,
        arrayidx4515346_load_0370,
        loopWidth,
        zext_ln1035,
        b_V_1_1_out,
        b_V_1_1_out_ap_vld,
        rhs_4_out,
        rhs_4_out_ap_vld,
        g_V_1_1_out,
        g_V_1_1_out_ap_vld,
        rhs_2_out,
        rhs_2_out_ap_vld,
        r_V_1_1_out,
        r_V_1_1_out_ap_vld,
        rhs_out,
        rhs_out_ap_vld,
        luma_V_1_1_out,
        luma_V_1_1_out_ap_vld,
        luma_V_0_1_out,
        luma_V_0_1_out_ap_vld,
        arrayidx5717348_load_0379_out,
        arrayidx5717348_load_0379_out_ap_vld,
        arrayidx5116347_load_0375_out,
        arrayidx5116347_load_0375_out_ap_vld,
        arrayidx4515346_load_0371_out,
        arrayidx4515346_load_0371_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [47:0] imgRgb_dout;
input   imgRgb_empty_n;
output   imgRgb_read;
output  [47:0] imgUnzip_din;
input   imgUnzip_full_n;
output   imgUnzip_write;
input  [9:0] b_V_1_059;
input  [9:0] b_V_0_0;
input  [9:0] g_V_1_058;
input  [9:0] g_V_0_0;
input  [9:0] r_V_1_057;
input  [9:0] r_V_0_0;
input  [9:0] luma_V_1_056;
input  [9:0] luma_V_0_0;
input  [9:0] arrayidx5717348_load_0378;
input  [9:0] arrayidx5116347_load_0374;
input  [9:0] arrayidx4515346_load_0370;
input  [16:0] loopWidth;
input  [15:0] zext_ln1035;
output  [9:0] b_V_1_1_out;
output   b_V_1_1_out_ap_vld;
output  [9:0] rhs_4_out;
output   rhs_4_out_ap_vld;
output  [9:0] g_V_1_1_out;
output   g_V_1_1_out_ap_vld;
output  [9:0] rhs_2_out;
output   rhs_2_out_ap_vld;
output  [9:0] r_V_1_1_out;
output   r_V_1_1_out_ap_vld;
output  [9:0] rhs_out;
output   rhs_out_ap_vld;
output  [9:0] luma_V_1_1_out;
output   luma_V_1_1_out_ap_vld;
output  [9:0] luma_V_0_1_out;
output   luma_V_0_1_out_ap_vld;
output  [9:0] arrayidx5717348_load_0379_out;
output   arrayidx5717348_load_0379_out_ap_vld;
output  [9:0] arrayidx5116347_load_0375_out;
output   arrayidx5116347_load_0375_out_ap_vld;
output  [9:0] arrayidx4515346_load_0371_out;
output   arrayidx4515346_load_0371_out_ap_vld;

reg ap_idle;
reg imgRgb_read;
reg imgUnzip_write;
reg b_V_1_1_out_ap_vld;
reg rhs_4_out_ap_vld;
reg g_V_1_1_out_ap_vld;
reg rhs_2_out_ap_vld;
reg r_V_1_1_out_ap_vld;
reg rhs_out_ap_vld;
reg luma_V_1_1_out_ap_vld;
reg luma_V_0_1_out_ap_vld;
reg arrayidx5717348_load_0379_out_ap_vld;
reg arrayidx5116347_load_0375_out_ap_vld;
reg arrayidx4515346_load_0371_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln1051_reg_999;
reg   [0:0] icmp_ln1057_reg_1003;
reg    ap_predicate_op59_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln1109_reg_1007;
reg   [0:0] icmp_ln1109_reg_1007_pp0_iter2_reg;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1051_fu_411_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    imgRgb_blk_n;
wire    ap_block_pp0_stage0;
reg    imgUnzip_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1051_reg_999_pp0_iter1_reg;
wire   [0:0] icmp_ln1057_fu_423_p2;
wire   [0:0] icmp_ln1109_fu_429_p2;
reg   [0:0] icmp_ln1109_reg_1007_pp0_iter1_reg;
wire   [9:0] select_ln1094_fu_800_p3;
reg   [9:0] select_ln1094_reg_1011;
wire   [9:0] select_ln1094_1_fu_808_p3;
reg   [9:0] select_ln1094_1_reg_1016;
wire   [9:0] select_ln1094_2_fu_816_p3;
reg   [9:0] select_ln1094_2_reg_1021;
reg    ap_condition_exit_pp0_iter2_stage0;
reg   [16:0] x_fu_128;
wire    ap_loop_init;
reg   [16:0] ap_sig_allocacmp_x_1;
wire   [16:0] x_2_fu_417_p2;
reg   [9:0] luma_V_1_1_fu_132;
reg   [9:0] rhs_1_fu_136;
reg   [9:0] rhs_3_fu_140;
reg   [9:0] rhs_5_fu_144;
reg   [9:0] arrayidx4515346_load_0371_fu_148;
reg   [9:0] arrayidx5116347_load_0375_fu_152;
wire   [9:0] trunc_ln145_fu_440_p1;
reg   [9:0] arrayidx5717348_load_0379_fu_156;
reg   [9:0] luma_V_0_1_fu_160;
wire   [9:0] zext_ln1082_fu_604_p1;
reg   [9:0] rhs_fu_164;
reg   [9:0] rhs_2_fu_168;
reg   [9:0] rhs_4_fu_172;
reg    ap_block_pp0_stage0_01001;
wire   [16:0] zext_ln1035_cast_fu_344_p1;
wire   [7:0] trunc_ln1_fu_516_p4;
wire   [8:0] lshr_ln1079_1_fu_530_p4;
wire   [6:0] trunc_ln1079_1_fu_544_p4;
wire   [6:0] lshr_ln1079_3_fu_558_p4;
wire   [9:0] zext_ln1079_3_fu_540_p1;
wire   [9:0] zext_ln1079_4_fu_568_p1;
wire   [8:0] zext_ln1079_1_fu_554_p1;
wire   [8:0] zext_ln1079_fu_526_p1;
wire   [8:0] add_ln1079_1_fu_578_p2;
wire   [9:0] zext_ln1079_2_fu_584_p1;
wire   [9:0] add_ln1079_fu_572_p2;
wire   [9:0] lum_fu_588_p2;
wire   [6:0] val_assign_fu_594_p4;
wire   [0:0] icmp_ln1061_fu_614_p2;
wire   [0:0] icmp_ln1057_1_fu_608_p2;
wire   [0:0] xor_ln1061_fu_620_p2;
wire   [0:0] icmp_ln1061_1_fu_632_p2;
wire   [0:0] xor_ln1061_1_fu_638_p2;
wire   [0:0] icmp_ln1057_2_fu_644_p2;
wire   [10:0] ret_6_fu_656_p3;
wire   [10:0] zext_ln1525_1_fu_664_p1;
wire   [10:0] zext_ln1525_3_fu_672_p1;
wire   [10:0] add_ln1525_fu_676_p2;
wire   [11:0] zext_ln1525_5_fu_682_p1;
wire   [11:0] zext_ln1525_fu_668_p1;
wire   [11:0] ret_fu_686_p2;
wire   [10:0] ret_7_fu_702_p3;
wire   [10:0] zext_ln1525_6_fu_710_p1;
wire   [10:0] zext_ln1525_7_fu_718_p1;
wire   [10:0] add_ln1525_2_fu_722_p2;
wire   [11:0] zext_ln1525_8_fu_728_p1;
wire   [11:0] zext_ln1525_2_fu_714_p1;
wire   [11:0] ret_3_fu_732_p2;
wire   [10:0] ret_8_fu_748_p3;
wire   [10:0] zext_ln1525_9_fu_756_p1;
wire   [10:0] zext_ln1525_10_fu_764_p1;
wire   [10:0] add_ln1525_4_fu_768_p2;
wire   [11:0] zext_ln1525_11_fu_774_p1;
wire   [11:0] zext_ln1525_4_fu_760_p1;
wire   [11:0] ret_5_fu_778_p2;
wire   [0:0] and_ln1094_fu_626_p2;
wire   [0:0] and_ln1094_1_fu_650_p2;
wire   [0:0] or_ln1094_fu_794_p2;
wire   [9:0] r_V_fu_692_p4;
wire   [9:0] b_V_fu_784_p4;
wire   [9:0] g_V_fu_738_p4;
wire   [41:0] tmp_fu_864_p6;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_566;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

system_v_demosaic_0_1_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arrayidx4515346_load_0371_fu_148 <= arrayidx4515346_load_0370;
        end else if ((1'b1 == ap_condition_566)) begin
            arrayidx4515346_load_0371_fu_148 <= {{imgRgb_dout[41:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arrayidx5116347_load_0375_fu_152 <= arrayidx5116347_load_0374;
        end else if ((1'b1 == ap_condition_566)) begin
            arrayidx5116347_load_0375_fu_152 <= trunc_ln145_fu_440_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            arrayidx5717348_load_0379_fu_156 <= arrayidx5717348_load_0378;
        end else if ((1'b1 == ap_condition_566)) begin
            arrayidx5717348_load_0379_fu_156 <= {{imgRgb_dout[25:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            luma_V_0_1_fu_160 <= luma_V_0_0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd0))) begin
            luma_V_0_1_fu_160 <= zext_ln1082_fu_604_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            luma_V_1_1_fu_132 <= luma_V_1_056;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd0))) begin
            luma_V_1_1_fu_132 <= luma_V_0_1_fu_160;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            rhs_1_fu_136 <= r_V_1_057;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd0))) begin
            rhs_1_fu_136 <= rhs_fu_164;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            rhs_2_fu_168 <= g_V_0_0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd0))) begin
            rhs_2_fu_168 <= arrayidx5116347_load_0375_fu_152;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            rhs_3_fu_140 <= g_V_1_058;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd0))) begin
            rhs_3_fu_140 <= rhs_2_fu_168;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            rhs_4_fu_172 <= b_V_0_0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd0))) begin
            rhs_4_fu_172 <= arrayidx5717348_load_0379_fu_156;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            rhs_5_fu_144 <= b_V_1_059;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd0))) begin
            rhs_5_fu_144 <= rhs_4_fu_172;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            rhs_fu_164 <= r_V_0_0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd0))) begin
            rhs_fu_164 <= arrayidx4515346_load_0371_fu_148;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1051_fu_411_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_128 <= x_2_fu_417_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_128 <= 17'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln1051_reg_999 <= icmp_ln1051_fu_411_p2;
        icmp_ln1051_reg_999_pp0_iter1_reg <= icmp_ln1051_reg_999;
        icmp_ln1109_reg_1007_pp0_iter1_reg <= icmp_ln1109_reg_1007;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1051_fu_411_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1057_reg_1003 <= icmp_ln1057_fu_423_p2;
        icmp_ln1109_reg_1007 <= icmp_ln1109_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln1109_reg_1007_pp0_iter2_reg <= icmp_ln1109_reg_1007_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd0))) begin
        select_ln1094_1_reg_1016 <= select_ln1094_1_fu_808_p3;
        select_ln1094_2_reg_1021 <= select_ln1094_2_fu_816_p3;
        select_ln1094_reg_1011 <= select_ln1094_fu_800_p3;
    end
end

always @ (*) begin
    if (((icmp_ln1051_fu_411_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_x_1 = 17'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_128;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd1))) begin
        arrayidx4515346_load_0371_out_ap_vld = 1'b1;
    end else begin
        arrayidx4515346_load_0371_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd1))) begin
        arrayidx5116347_load_0375_out_ap_vld = 1'b1;
    end else begin
        arrayidx5116347_load_0375_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd1))) begin
        arrayidx5717348_load_0379_out_ap_vld = 1'b1;
    end else begin
        arrayidx5717348_load_0379_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd1))) begin
        b_V_1_1_out_ap_vld = 1'b1;
    end else begin
        b_V_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd1))) begin
        g_V_1_1_out_ap_vld = 1'b1;
    end else begin
        g_V_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op59_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imgRgb_blk_n = imgRgb_empty_n;
    end else begin
        imgRgb_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op59_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imgRgb_read = 1'b1;
    end else begin
        imgRgb_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1109_reg_1007_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        imgUnzip_blk_n = imgUnzip_full_n;
    end else begin
        imgUnzip_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1109_reg_1007_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        imgUnzip_write = 1'b1;
    end else begin
        imgUnzip_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd1))) begin
        luma_V_0_1_out_ap_vld = 1'b1;
    end else begin
        luma_V_0_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd1))) begin
        luma_V_1_1_out_ap_vld = 1'b1;
    end else begin
        luma_V_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd1))) begin
        r_V_1_1_out_ap_vld = 1'b1;
    end else begin
        r_V_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd1))) begin
        rhs_2_out_ap_vld = 1'b1;
    end else begin
        rhs_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd1))) begin
        rhs_4_out_ap_vld = 1'b1;
    end else begin
        rhs_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_999_pp0_iter1_reg == 1'd1))) begin
        rhs_out_ap_vld = 1'b1;
    end else begin
        rhs_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1079_1_fu_578_p2 = (zext_ln1079_1_fu_554_p1 + zext_ln1079_fu_526_p1);

assign add_ln1079_fu_572_p2 = (zext_ln1079_3_fu_540_p1 + zext_ln1079_4_fu_568_p1);

assign add_ln1525_2_fu_722_p2 = (zext_ln1525_6_fu_710_p1 + zext_ln1525_7_fu_718_p1);

assign add_ln1525_4_fu_768_p2 = (zext_ln1525_9_fu_756_p1 + zext_ln1525_10_fu_764_p1);

assign add_ln1525_fu_676_p2 = (zext_ln1525_1_fu_664_p1 + zext_ln1525_3_fu_672_p1);

assign and_ln1094_1_fu_650_p2 = (xor_ln1061_1_fu_638_p2 & icmp_ln1057_2_fu_644_p2);

assign and_ln1094_fu_626_p2 = (xor_ln1061_fu_620_p2 & icmp_ln1057_1_fu_608_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln1109_reg_1007_pp0_iter2_reg == 1'd0) & (imgUnzip_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op59_read_state2 == 1'b1) & (imgRgb_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln1109_reg_1007_pp0_iter2_reg == 1'd0) & (imgUnzip_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op59_read_state2 == 1'b1) & (imgRgb_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln1109_reg_1007_pp0_iter2_reg == 1'd0) & (imgUnzip_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op59_read_state2 == 1'b1) & (imgRgb_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op59_read_state2 == 1'b1) & (imgRgb_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((icmp_ln1109_reg_1007_pp0_iter2_reg == 1'd0) & (imgUnzip_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_566 = ((icmp_ln1057_reg_1003 == 1'd1) & (icmp_ln1051_reg_999 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op59_read_state2 = ((icmp_ln1057_reg_1003 == 1'd1) & (icmp_ln1051_reg_999 == 1'd0));
end

assign arrayidx4515346_load_0371_out = arrayidx4515346_load_0371_fu_148;

assign arrayidx5116347_load_0375_out = arrayidx5116347_load_0375_fu_152;

assign arrayidx5717348_load_0379_out = arrayidx5717348_load_0379_fu_156;

assign b_V_1_1_out = rhs_5_fu_144;

assign b_V_fu_784_p4 = {{ret_5_fu_778_p2[11:2]}};

assign g_V_1_1_out = rhs_3_fu_140;

assign g_V_fu_738_p4 = {{ret_3_fu_732_p2[11:2]}};

assign icmp_ln1051_fu_411_p2 = ((ap_sig_allocacmp_x_1 == loopWidth) ? 1'b1 : 1'b0);

assign icmp_ln1057_1_fu_608_p2 = ((luma_V_1_1_fu_132 < luma_V_0_1_fu_160) ? 1'b1 : 1'b0);

assign icmp_ln1057_2_fu_644_p2 = ((luma_V_0_1_fu_160 < zext_ln1082_fu_604_p1) ? 1'b1 : 1'b0);

assign icmp_ln1057_fu_423_p2 = ((ap_sig_allocacmp_x_1 < zext_ln1035_cast_fu_344_p1) ? 1'b1 : 1'b0);

assign icmp_ln1061_1_fu_632_p2 = ((luma_V_1_1_fu_132 < luma_V_0_1_fu_160) ? 1'b1 : 1'b0);

assign icmp_ln1061_fu_614_p2 = ((luma_V_0_1_fu_160 < zext_ln1082_fu_604_p1) ? 1'b1 : 1'b0);

assign icmp_ln1109_fu_429_p2 = ((ap_sig_allocacmp_x_1 == 17'd0) ? 1'b1 : 1'b0);

assign imgUnzip_din = tmp_fu_864_p6;

assign lshr_ln1079_1_fu_530_p4 = {{arrayidx5116347_load_0375_fu_152[9:1]}};

assign lshr_ln1079_3_fu_558_p4 = {{arrayidx5717348_load_0379_fu_156[9:3]}};

assign lum_fu_588_p2 = (zext_ln1079_2_fu_584_p1 + add_ln1079_fu_572_p2);

assign luma_V_0_1_out = luma_V_0_1_fu_160;

assign luma_V_1_1_out = luma_V_1_1_fu_132;

assign or_ln1094_fu_794_p2 = (and_ln1094_fu_626_p2 | and_ln1094_1_fu_650_p2);

assign r_V_1_1_out = rhs_1_fu_136;

assign r_V_fu_692_p4 = {{ret_fu_686_p2[11:2]}};

assign ret_3_fu_732_p2 = (zext_ln1525_8_fu_728_p1 + zext_ln1525_2_fu_714_p1);

assign ret_5_fu_778_p2 = (zext_ln1525_11_fu_774_p1 + zext_ln1525_4_fu_760_p1);

assign ret_6_fu_656_p3 = {{rhs_fu_164}, {1'd0}};

assign ret_7_fu_702_p3 = {{rhs_2_fu_168}, {1'd0}};

assign ret_8_fu_748_p3 = {{rhs_4_fu_172}, {1'd0}};

assign ret_fu_686_p2 = (zext_ln1525_5_fu_682_p1 + zext_ln1525_fu_668_p1);

assign rhs_2_out = rhs_2_fu_168;

assign rhs_4_out = rhs_4_fu_172;

assign rhs_out = rhs_fu_164;

assign select_ln1094_1_fu_808_p3 = ((or_ln1094_fu_794_p2[0:0] == 1'b1) ? b_V_fu_784_p4 : rhs_4_fu_172);

assign select_ln1094_2_fu_816_p3 = ((or_ln1094_fu_794_p2[0:0] == 1'b1) ? g_V_fu_738_p4 : rhs_2_fu_168);

assign select_ln1094_fu_800_p3 = ((or_ln1094_fu_794_p2[0:0] == 1'b1) ? r_V_fu_692_p4 : rhs_fu_164);

assign tmp_fu_864_p6 = {{{{{select_ln1094_reg_1011}, {6'd0}}, {select_ln1094_1_reg_1016}}, {6'd0}}, {select_ln1094_2_reg_1021}};

assign trunc_ln1079_1_fu_544_p4 = {{arrayidx5116347_load_0375_fu_152[9:3]}};

assign trunc_ln145_fu_440_p1 = imgRgb_dout[9:0];

assign trunc_ln1_fu_516_p4 = {{arrayidx4515346_load_0371_fu_148[9:2]}};

assign val_assign_fu_594_p4 = {{lum_fu_588_p2[9:3]}};

assign x_2_fu_417_p2 = (ap_sig_allocacmp_x_1 + 17'd1);

assign xor_ln1061_1_fu_638_p2 = (icmp_ln1061_1_fu_632_p2 ^ 1'd1);

assign xor_ln1061_fu_620_p2 = (icmp_ln1061_fu_614_p2 ^ 1'd1);

assign zext_ln1035_cast_fu_344_p1 = zext_ln1035;

assign zext_ln1079_1_fu_554_p1 = trunc_ln1079_1_fu_544_p4;

assign zext_ln1079_2_fu_584_p1 = add_ln1079_1_fu_578_p2;

assign zext_ln1079_3_fu_540_p1 = lshr_ln1079_1_fu_530_p4;

assign zext_ln1079_4_fu_568_p1 = lshr_ln1079_3_fu_558_p4;

assign zext_ln1079_fu_526_p1 = trunc_ln1_fu_516_p4;

assign zext_ln1082_fu_604_p1 = val_assign_fu_594_p4;

assign zext_ln1525_10_fu_764_p1 = rhs_5_fu_144;

assign zext_ln1525_11_fu_774_p1 = add_ln1525_4_fu_768_p2;

assign zext_ln1525_1_fu_664_p1 = arrayidx4515346_load_0371_fu_148;

assign zext_ln1525_2_fu_714_p1 = ret_7_fu_702_p3;

assign zext_ln1525_3_fu_672_p1 = rhs_1_fu_136;

assign zext_ln1525_4_fu_760_p1 = ret_8_fu_748_p3;

assign zext_ln1525_5_fu_682_p1 = add_ln1525_fu_676_p2;

assign zext_ln1525_6_fu_710_p1 = arrayidx5116347_load_0375_fu_152;

assign zext_ln1525_7_fu_718_p1 = rhs_3_fu_140;

assign zext_ln1525_8_fu_728_p1 = add_ln1525_2_fu_722_p2;

assign zext_ln1525_9_fu_756_p1 = arrayidx5717348_load_0379_fu_156;

assign zext_ln1525_fu_668_p1 = ret_6_fu_656_p3;

endmodule //system_v_demosaic_0_1_ZipperRemoval_Pipeline_VITIS_LOOP_1051_2
